{"version":3,"sources":["components/controllerview/settingtable/SettingComponent.js","components/controllerview/uploadtable/UploadComponent.js","components/controllerview/builtintable/BuiltInComponent.js","components/controllerview/viewer/SceneComponent.js","components/controllerview/viewer/ViewPortComponent.js","components/controllerview/viewer/ScalelineComponent.js","components/controllerview/addtable/AddComponent.js","components/controllerview/ViewWithControl.js","components/footer/FooterComponent.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","sliderroot","width","spacing","slidermargin","height","margin","marginTop","marginRight","textField","background","borderRadius","opacity","RedSlider","withStyles","root","color","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","rail","Slider","GreenSlider","BlueSlider","GridSettings","props","classes","React","useState","planesize","gridsize","gridChange","lightR","lightG","lightB","values","setValues","handleGridChange","prop","event","target","value","handleColorChange","slidervalue","className","Grid","container","direction","alignItems","item","TextField","size","id","variant","label","type","defaultValue","onChange","clsx","InputProps","startAdornment","InputAdornment","position","Fab","aria-label","onClick","Button","disabled","style","fontSize","valueLabelDisplay","min","max","step","FileUpload","file","confirmUpload","fileControl","setFile","name","files","textFieldtop","BuiltInComponent","builtintype","builtinname","builtinnew","positionx","positiony","positionz","scalex","scaley","scalez","rotationx","rotationy","rotationz","builtinData","setBuiltin","handlePositionChange","FormControl","InputLabel","htmlFor","Select","native","inputProps","Swal","fire","icon","text","SceneComponent","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","rest","onSceneReady","window","innerWidth","innerHeight","useEffect","current","engine","Engine","stencil","scene","Scene","clearColor","Color3","setSize","isReady","onReadyObservable","addOnce","runRenderLoop","render","resize","newWidth","newHeight","getEngine","addEventListener","dispose","removeEventListener","ref","translategizmo","rotategizmo","utilLayer","highlight","degree_to_radians","degrees","Math","PI","ViewPortComponent","settingData","setSettings","addData","setAdd","setFileControl","libraryData","sceneRef","attachedMesh","UtilityLayerRenderer","PositionGizmo","RotationGizmo","HighlightLayer","updateGizmoRotationToMatchAttachedMesh","updateGizmoPositionToMatchAttachedMesh","onPointerDown","evt","pickResult","hit","console","log","pickedMesh","meshes","removeAllMeshes","addMesh","Magenta","prePlane","getMeshByID","prePlaneMaterial","getMaterialByID","_width","gridRatio","ground","MeshBuilder","CreateGround","groundMaterial","GridMaterial","majorUnitFrequency","minorUnitVisibility","backFaceCulling","mainColor","lineColor","material","isPickable","fileadd","TransformNode","SceneLoader","ImportMesh","newMeshes","forEach","mesh","parent","scaling","Vector3","preShelf","getNodeByID","showDenyButton","allowOutsideClick","confirmButtonText","denyButtonText","then","result","isConfirmed","showConfirmButton","timer","selectedBuiltin","Number","rotation","isDenied","preWall","wall","CreateBox","depth","preFloor","floor","addnew","primetype","preBox","primename","box","preSphere","sphere","CreateSphere","preCylinder","cylinder","CreateCylinder","prePolyhedron","polyhedron","Mesh","CreatePolyhedron","polyhydrontype","camera","ArcRotateCamera","setPosition","canvas","getRenderingCanvas","attachControl","HemisphericLight","intensity","palette","divider","paper","secondary","ScaleLine","Divider","orientation","flexItem","children","AddComponent","primeData","setPrime","eventvalue","a","input","inputOptions","Polyhydrons","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","inputPlaceholder","showCancelButton","inputValidator","Promise","resolve","extendedIcon","FloatingActionButtons","confirmed","buultintype","showAdd","showSettings","showEdit","showImport","showLibrary","faFileUpload","data","handleClick","preventDefault","open","SimpleBreadcrumbs","Breadcrumbs","Typography","Link","href","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7516b3d1.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles} from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport Confirm from '@material-ui/icons/Check';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  sliderroot: {\n    width: 100 + theme.spacing(3) * 2,\n  },\n  slidermargin: {\n    height: theme.spacing(2),\n  },\n  margin: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textField: {\n    width: '12ch',\n    background: \"white\",\n    borderRadius: 8,\n    opacity: 0.8,\n  },\n}));\n\nconst RedSlider = withStyles({\n  root: {\n    color: 'red',\n    height: 4,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst GreenSlider = withStyles({\n  root: {\n    color: 'green',\n    height: 4,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst BlueSlider = withStyles({\n  root: {\n    color: 'blue',\n    height: 4,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\n\n// export default function InputAdornments() {\nconst GridSettings = props =>{\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    planesize: 6000,\n    gridsize: 50,\n    gridChange: false,\n    lightR: 0.45,\n    lightG: 0.45,\n    lightB: 0.45,\n    // colorChange: false,\n  });\n\n  const handleGridChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value, gridChange: false});\n    //handle child state change\n  };\n  const handleColorChange = (prop) => (event, slidervalue) => {\n    setValues({ ...values, [prop]: slidervalue, gridChange: false});\n    //handle child state change\n  };\n\n  const handleClickGridConfirm = ()=> {\n    setValues({ ...values, gridChange: true });\n    if (props.onChange) {\n        props.onChange(values);\n      }\n  };\n\n  // const handleClickColorConfirm = ()=> {\n  //   setValues({ ...values, colorChange: true });\n  //   if (props.onChange) {\n  //       props.onChange(values);\n  //     }\n  // };\n\n//   const handleMouseDownPassword = (event) => {\n//     event.preventDefault();\n//   };\n\n  return (\n    <div className={classes.root}>\n      <div>\n      <Grid container direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <TextField\n                size = \"small\"\n                id=\"filled-secondary-planesize\"\n                variant=\"filled\"\n                color=\"secondary\"\n                label=\"plane size\"\n                type=\"number\"\n                defaultValue = {values.planesize}\n                onChange={handleGridChange('planesize')}\n                className={clsx(classes.margin, classes.textField)}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">inch</InputAdornment>,\n                }}\n              />\n        </Grid>\n        <Grid item>\n          <TextField\n                  size = \"small\"\n                  id=\"filled-secondary-gridsize\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"grid size\"\n                  type=\"number\"\n                  onChange={handleGridChange('gridsize')}\n                  defaultValue = {values.gridsize}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">inch</InputAdornment>,\n                  }}\n                />\n        </Grid>\n        <Grid item>\n          <Fab size=\"small\" color = \"secondary\" aria-label=\"confirm grid\" onClick = {handleClickGridConfirm} color = {values.gridChange ? \"primary\" : \"default\" }>\n              <Confirm />\n          </Fab>\n        </Grid>\n      </Grid>\n      </div>\n      <Grid container direction=\"row\" alignItems=\"left\">\n        <Grid item>\n        <div className={classes.sliderroot}>\n        <div className={classes.slidermargin} />\n        \n        <Button size = \"small\" disabled style={{ color: \"black\" }}> Background <ColorLensIcon fontSize = \"large\"></ColorLensIcon></Button>\n          <div className={classes.slidermargin} />\n          <RedSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider 2\" defaultValue={0.45} min = {0} max = {1} step = {0.01} onChange={handleColorChange('lightR')}/>\n          <div className={classes.slidermargin} />\n          <BlueSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider 3\" defaultValue={0.45} min = {0} max = {1} step = {0.01} onChange={handleColorChange('lightB')}/>\n          <div className={classes.slidermargin} />\n          <GreenSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider 4\" defaultValue={0.45} min = {0} max = {1} step = {0.01} onChange={handleColorChange('lightG')}/>\n        </div>\n        </Grid>\n        {/* <Grid item>\n        <div className={classes.slidermargin} />\n          <Fab size=\"small\" color = \"secondary\" aria-label=\"confirm color\" onClick = {handleClickColorConfirm} color = {values.colorChange ? \"primary\" : \"default\" }>\n              <Confirm />\n          </Fab>\n        </Grid> */}\n      </Grid>\n      <div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default GridSettings;","import React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles} from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport Confirm from '@material-ui/icons/Check';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Swal from 'sweetalert2';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    textField: {\n      width: '30ch',\n      background: \"white\",\n      borderRadius: 8,\n      opacity: 0.8,\n    },\n  }));\n  \n/**\n * Component to handle file upload. Works for image\n * uploads, but can be edited to work for any file.\n */\nconst FileUpload = props =>{\n  const classes = useStyles();\n  // State to store uploaded file\n  const [fileControl, setFile] = React.useState({\n      file: \"\",\n      confirmUpload: false,\n  });\n  const handleClickUploadConfirm = ()=> {\n    setFile({...fileControl, confirmUpload: true});\n    if (props.onChange) {\n        props.onChange(fileControl);\n      }\n  };\n  // Handles file upload event and updates state\n  function handleUpload(event) {\n    setFile({file:event.target.files[0], confirmUpload: false});\n    // Add code here to upload file to server\n    // ...\n  }\n\n  return (\n    <div className={classes.root}>\n    <div>\n    <Grid container direction=\"column\" alignItems=\"left\">\n      <Grid item>\n        <TextField\n                size = \"small\"\n                id=\"filled-secondary-planesize\"\n                variant=\"outlined\"\n                color=\"secondary\"\n                type=\"file\"\n                defaultValue = {fileControl.file.name}\n                onChange={handleUpload}\n                className={clsx(classes.margin, classes.textField)}\n                />\n        </Grid>\n      <Grid item>\n        <div id=\"upload-states-info\">\n        <p>Filename: {fileControl.file.name}</p>\n        <p>File Size: {fileControl.file.size} bytes</p>\n        </div>\n      </Grid>\n      <Grid item>\n        <div className={classes.slidermargin} />\n          <Fab size=\"small\" color = \"secondary\" aria-label=\"confirm color\" onClick = {handleClickUploadConfirm} color = {fileControl.confirmUpload ? \"primary\" : \"default\" }>\n              <Confirm />\n          </Fab>\n     </Grid>\n    </Grid>\n\n    </div>\n    </div>\n\n  );\n}\n\nexport default FileUpload;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Confirm from \"@material-ui/icons/Check\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Swal from \"sweetalert2\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textFieldtop: {\n    width: \"32ch\",\n    background: \"white\",\n    borderRadius: 8,\n    opacity: 0.8,\n  },\n  textField: {\n    width: \"16ch\",\n    background: \"white\",\n    borderRadius: 8,\n    opacity: 0.8,\n  },\n}));\n\nconst BuiltInComponent = (props) => {\n  const classes = useStyles();\n  const [builtinData, setBuiltin] = React.useState({\n    builtintype: \"\",\n    builtinname: \"\",\n    builtinnew: false,\n    positionx: 0,\n    positiony: 0,\n    positionz: 0,\n    scalex: 1,\n    scaley: 1,\n    scalez: 1,\n    rotationx: 0,\n    rotationy: 0,\n    rotationz: 0,\n  });\n\n  const handleBuiltinChange = (event) => {\n    const name = event.target.name;\n    const eventvalue = event.target.value;\n    setBuiltin({\n        ...builtinData,\n        [name]: event.target.value,\n        builtinnew: false,\n      });\n\n    //handle child state change\n  };\n\n  const handlePositionChange = (prop) => (event) => {\n    setBuiltin({ ...builtinData, [prop]: event.target.value, builtinnew: false });\n    //handle child state change\n  };\n\n  const handleClickAddConfirm = () => {\n    if (!builtinData.builtinname){\n        Swal.fire({\n            background: \"black\",\n            icon: \"info\",\n            text: \"Please assign a name for your object\",\n          });\n    }\n    else{\n    setBuiltin({ ...builtinData, builtinnew: true });\n    if (props.onChange) {\n      props.onChange(builtinData);\n    }\n    }\n  };\n  return (\n    <div>\n      <div className={classes.margin}></div>\n      <Grid container direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <FormControl\n            size=\"small\"\n            variant=\"filled\"\n            className={classes.textFieldtop}\n          >\n            <InputLabel htmlFor=\"filled-age-native-simple\">+ Models (All Fields Required)</InputLabel>\n            <Select\n              native\n              value={builtinData.builtintype}\n              onChange={handleBuiltinChange}\n              inputProps={{\n                name: \"builtintype\",\n                id: \"filled-builtins-native-simple\",\n              }}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <optgroup label=\"Base\">\n              <option value={\"Wall_100x100x10\"}>Wall 100x100x10</option>\n              <option value={\"Floor_1000x1x1000\"}>Floor 1000x1x1000</option>\n              </optgroup>\n              <optgroup label=\"Shelf System\">\n              <option value={\"Storage_Shelf_100x150x40\"}>Storage Shelf 100x150x40</option>\n              </optgroup>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <div>\n        <Grid container direction=\"row\" alignItems=\"left\">\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"left\">\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-name\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"object name\"\n                  type=\"string\"\n                  // defaultValue = {values.planesize}\n                  onChange={handlePositionChange(\"builtinname\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={\n                    {\n                      // startAdornment: <InputAdornment position=\"start\">required:</InputAdornment>,\n                    }\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-x\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  defaultValue = {builtinData.positionx}\n                  onChange={handlePositionChange(\"positionx\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">X:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-y\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"positiony\")}\n                 defaultValue = {builtinData.positiony}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Y:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-z\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"positionz\")}\n                 defaultValue = {builtinData.positionz}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Z:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-x\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"rotation-x (degree)\"\n                  type=\"number\"\n                  defaultValue = {builtinData.rotationx}\n                  onChange={handlePositionChange(\"rotationx\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">X:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-y\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"rotation-y (degree)\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"rotationy\")}\n                 defaultValue = {builtinData.rotationy}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Y:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-z\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"rotation-z (degree)\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"rotationz\")}\n                 defaultValue = {builtinData.rotationz}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Z:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"left\">\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-x\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-x\"\n                  type=\"number\"\n                  defaultValue = {builtinData.scalex}\n                  onChange={handlePositionChange(\"scalex\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">X:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-y\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-y\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"scaley\")}\n                  defaultValue = {builtinData.scaley}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Y:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-z\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-z\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"scalez\")}\n                 defaultValue = {builtinData.scalez}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Z:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <div className={classes.margin}></div>\n              <Grid item>\n                <Fab\n                  size=\"small\"\n                  color=\"secondary\"\n                  aria-label=\"confirm grid\"\n                  onClick={handleClickAddConfirm}\n                  color={builtinData.builtinnew ? \"primary\" : \"default\"}\n                >\n                  <Confirm />\n                </Fab>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default BuiltInComponent;\n","import { Engine, Scene, Color3} from '@babylonjs/core'\nimport React, { useEffect, useRef } from 'react'\n\nconst SceneComponent = (props) => {\n    const reactCanvas = useRef(null);\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, ...rest } = props;\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    useEffect(() => {\n        if (reactCanvas.current) {\n            const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio, { stencil: true });\n            const scene = new Scene(engine, sceneOptions);\n            scene.clearColor = new Color3(0.45, 0.45, 0.45);\n            engine.setSize(width, height);\n            if (scene.isReady()) {\n                props.onSceneReady(scene)\n            } else {\n                scene.onReadyObservable.addOnce(scene => props.onSceneReady(scene));\n            }\n            engine.runRenderLoop(() => {\n                if (typeof onRender === 'function') {\n                    onRender(scene);\n                }\n                scene.render();\n            })\n            const resize = () => {\n                const newWidth = window.innerWidth;\n                const newHeight = window.innerHeight;\n                engine.setSize(newWidth, newHeight);\n                scene.getEngine().resize();\n            }\n            if (window) {\n                window.addEventListener('resize', resize);\n            }\n            return () => {\n                scene.getEngine().dispose();\n                if (window) {\n                    window.removeEventListener('resize', resize);\n                }\n            }\n        }\n    }, [reactCanvas])\n    return (\n        <canvas  ref={reactCanvas} {...rest} />\n    );\n}\n\nexport default SceneComponent;","import React from \"react\";\n// import * as BABYLON from 'babylonjs';\n// import 'babylonjs-loaders';\nimport \"@babylonjs/loaders/OBJ\";\nimport {\n  ArcRotateCamera,\n  Color3,\n  Vector3,\n  HemisphericLight,\n  MeshBuilder,\n  Mesh,\n  UtilityLayerRenderer,\n  PositionGizmo,\n  RotationGizmo,\n  HighlightLayer,\n  SceneLoader,\n  TransformNode,\n  StandardMaterial,\n} from \"@babylonjs/core\";\nimport { GridMaterial } from \"@babylonjs/materials\";\nimport SceneComponent from \"./SceneComponent\";\nimport \"./ViewPortComponent.css\";\nimport Swal from \"sweetalert2\";\nlet translategizmo = null;\nlet rotategizmo = null;\nlet utilLayer = null;\nlet highlight = null;\n\nfunction degree_to_radians(degrees) {\n  var pi = Math.PI;\n  return degrees * (pi / 180);\n}\n\nconst ViewPortComponent = (props) => {\n  const {\n    settingData,\n    setSettings,\n    addData,\n    setAdd,\n    fileControl,\n    setFileControl,\n    libraryData,\n    setBuiltin,\n  } = props;\n  const sceneRef = React.useRef(null);\n\n\n\n  React.useEffect(() => {\n    const scene = sceneRef.current;\n\n\n    if (scene) {\n      // modify the plane, by dispose and rebuild adding to scene.\n\n      if (!translategizmo) {\n        utilLayer = new UtilityLayerRenderer(scene);\n        // Create the gizmo and attach to the sphere\n        translategizmo = new PositionGizmo(utilLayer);\n        rotategizmo = new RotationGizmo(utilLayer);\n\n        highlight = new HighlightLayer(scene);\n      } else {\n        translategizmo.attachedMesh = null;\n        translategizmo.dispose();\n        rotategizmo.dispose();\n        utilLayer.dispose();\n        highlight.dispose();\n        utilLayer = new UtilityLayerRenderer(scene);\n        // Create the gizmo and attach to the sphere\n        translategizmo = new PositionGizmo(utilLayer);\n        rotategizmo = new RotationGizmo(utilLayer);\n        highlight = new HighlightLayer(scene);\n      }\n\n      translategizmo.attachedMesh = null;\n      // Keep the gizmo fixed to world rotation\n      translategizmo.updateGizmoRotationToMatchAttachedMesh = false;\n      translategizmo.updateGizmoPositionToMatchAttachedMesh = true;\n      rotategizmo.updateGizmoRotationToMatchAttachedMesh = false;\n      rotategizmo.updateGizmoPositionToMatchAttachedMesh = true;\n\n      scene.onPointerDown = function (evt, pickResult) {\n        // We try to pick an object\n\n        if (pickResult.hit) {\n          console.log(pickResult.pickedMesh.name);\n          console.log(scene.meshes);\n          highlight.removeAllMeshes();\n          translategizmo.attachedMesh = pickResult.pickedMesh;\n          rotategizmo.attachedMesh = pickResult.pickedMesh;\n          highlight.addMesh(pickResult.pickedMesh, Color3.Magenta());\n        } else {\n          translategizmo.attachedMesh = null;\n          rotategizmo.attachedMesh = null;\n          highlight.removeAllMeshes();\n        }\n      };\n      if (settingData.gridChange) {\n        console.log(\"grid change request\");\n        scene.clearColor = new Color3(\n          settingData.lightR,\n          settingData.lightG,\n          settingData.lightB\n        );\n        const prePlane = scene.getMeshByID(\"plane\");\n        const prePlaneMaterial = scene.getMaterialByID(\"groundMaterial\");\n        if (\n          prePlane._width != settingData.planesize ||\n          prePlaneMaterial.gridRatio != settingData.gridsize\n        ) {\n          prePlane.dispose();\n          prePlaneMaterial.dispose();\n          let ground = MeshBuilder.CreateGround(\n            \"plane\",\n            { width: settingData.planesize, height: settingData.planesize },\n            scene\n          );\n          let groundMaterial = new GridMaterial(\"groundMaterial\", scene);\n          groundMaterial.majorUnitFrequency = 10;\n          groundMaterial.minorUnitVisibility = 0.5;\n          groundMaterial.gridRatio = settingData.gridsize; //smallest block size\n          groundMaterial.backFaceCulling = false;\n          groundMaterial.mainColor = new Color3(1, 1, 1);\n          groundMaterial.lineColor = new Color3(1.0, 1.0, 1.0);\n          groundMaterial.opacity = 0.98;\n          ground.material = groundMaterial;\n          ground.isPickable = false;\n        }\n\n        setSettings({ ...settingData, gridChange: false });\n      }\n      if (fileControl.fileadd) {\n        console.log(fileControl.file);\n        //test\n        let root = new TransformNode();\n        SceneLoader.ImportMesh(\n          \"\",\n          \"https://raw.githubusercontent.com/gamer-ai/amrgl/main/frontend/amrgl/src/assets/example/metal_shelf.obj\",\n          \"\",\n          scene,\n          function (newMeshes) {\n            newMeshes.forEach((mesh) => {\n              // leave meshes already parented to maintain model hierarchy:\n              if (!mesh.parent) {\n                mesh.parent = root;\n              }\n            });\n            // console.log(newMeshes[1].name);\n            // let selectedBuiltIn = newMeshes[1];\n            // // cap.position.set(42, 260, 13);\n            root.scaling = new Vector3(10, 1, 1);\n            console.log(root);\n          }\n        );\n        setFileControl({ ...fileControl, fileadd: false });\n      }\n      if (libraryData.builtinnew) {\n        console.log(\"add new object from library request\");\n        if (libraryData.builtintype == \"Storage_Shelf_100x150x40\") {\n          const preShelf =\n            scene.getMeshByID(libraryData.builtinname) ||\n            scene.getNodeByID(libraryData.builtinname);\n          console.log(preShelf);\n          if (preShelf) {\n            console.log(\"found exist!\");\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                libraryData.builtinname +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                preShelf.dispose();\n                // const preShelfShadow = scene.getMeshByID(libraryData.builtinname + \"shadow\");\n                // if (preShelfShadow){\n                //   preShelfShadow.dispose();\n                // }\n                let selectedBuiltin = new TransformNode();\n                SceneLoader.ImportMesh(\n                  \"\",\n                  \"https://raw.githubusercontent.com/gamer-ai/amrgl/main/frontend/amrgl/src/assets/example/metal_shelf.obj\",\n                  \"\",\n                  scene,\n                  function (newMeshes) {\n                    //\n                    // let selectedBuiltInShadow = newMeshes[0];\n                    // selectedBuiltInShadow.id = libraryData.builtinname + 'shadow';\n                    //\n                    // let selectedBuiltin = newMeshes[1];\n                    newMeshes.forEach((mesh) => {\n                      // leave meshes already parented to maintain model hierarchy:\n                      if (!mesh.parent) {\n                        mesh.parent = selectedBuiltin;\n                      }\n                    });\n                    selectedBuiltin.id = libraryData.builtinname;\n                    selectedBuiltin.position = new Vector3(\n                      Number(libraryData.positionx),\n                      Number(libraryData.positiony),\n                      Number(libraryData.positionz)\n                    );\n                    selectedBuiltin.scaling = new Vector3(\n                      Number(libraryData.scalex),\n                      Number(libraryData.scaley),\n                      Number(libraryData.scalez)\n                    );\n                    selectedBuiltin.rotation = new Vector3(\n                      degree_to_radians(Number(libraryData.rotationx)),\n                      degree_to_radians(Number(libraryData.rotationy)),\n                      degree_to_radians(Number(libraryData.rotationz))\n                    );\n                  }\n                );\n                setBuiltin({ ...libraryData, builtinnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n          } else {\n            console.log(\"imported new mesh!\");\n            let selectedBuiltin = new TransformNode();\n            SceneLoader.ImportMesh(\n              \"\",\n              \"https://raw.githubusercontent.com/gamer-ai/amrgl/main/frontend/amrgl/src/assets/example/metal_shelf.obj\",\n              \"\",\n              scene,\n              function (newMeshes) {\n                newMeshes.forEach((mesh) => {\n                  // leave meshes already parented to maintain model hierarchy:\n                  if (!mesh.parent) {\n                    mesh.parent = selectedBuiltin;\n                  }\n                });\n                //\n                // let selectedBuiltInShadow = newMeshes[0];\n                // selectedBuiltInShadow.id = libraryData.builtinname + 'shadow';\n                //\n                // let selectedBuiltin = newMeshes[1];\n                selectedBuiltin.id = libraryData.builtinname;\n                selectedBuiltin.position = new Vector3(\n                  Number(libraryData.positionx),\n                  Number(libraryData.positiony),\n                  Number(libraryData.positionz)\n                );\n                selectedBuiltin.scaling = new Vector3(\n                  Number(libraryData.scalex),\n                  Number(libraryData.scaley),\n                  Number(libraryData.scalez)\n                );\n                selectedBuiltin.rotation = new Vector3(\n                  degree_to_radians(Number(libraryData.rotationx)),\n                  degree_to_radians(Number(libraryData.rotationy)),\n                  degree_to_radians(Number(libraryData.rotationz))\n                );\n              }\n            );\n            setBuiltin({ ...libraryData, builtinnew: false });\n          }\n        } else if (libraryData.builtintype == \"Wall_100x100x10\") {\n          console.log(\"wall imported\");\n          const preWall =\n            scene.getMeshByID(libraryData.builtinname) ||\n            scene.getNodeByID(libraryData.builtinname);\n          if (preWall) {\n            console.log(\"found exist!\");\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                libraryData.builtinname +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                preWall.dispose();\n                let wall = MeshBuilder.CreateBox(\n                  libraryData.builtinname,\n                  { width: 100, height: 100, depth: 10 },\n                  scene\n                );\n                wall.position = new Vector3(\n                  Number(libraryData.positionx),\n                  Number(libraryData.positiony),\n                  Number(libraryData.positionz)\n                );\n                wall.scaling = new Vector3(\n                  Number(libraryData.scalex),\n                  Number(libraryData.scaley),\n                  Number(libraryData.scalez)\n                );\n                wall.rotation = new Vector3(\n                  degree_to_radians(Number(libraryData.rotationx)),\n                  degree_to_radians(Number(libraryData.rotationy)),\n                  degree_to_radians(Number(libraryData.rotationz))\n                );\n                setBuiltin({ ...libraryData, builtinnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n          } else {\n            console.log(\"imported new mesh!\");\n            let wall = MeshBuilder.CreateBox(\n              libraryData.builtinname,\n              { width: 100, height: 100, depth: 10 },\n              scene\n            );\n            wall.position = new Vector3(\n              Number(libraryData.positionx),\n              Number(libraryData.positiony),\n              Number(libraryData.positionz)\n            );\n            wall.scaling = new Vector3(\n              Number(libraryData.scalex),\n              Number(libraryData.scaley),\n              Number(libraryData.scalez)\n            );\n            wall.rotation = new Vector3(\n              degree_to_radians(Number(libraryData.rotationx)),\n              degree_to_radians(Number(libraryData.rotationy)),\n              degree_to_radians(Number(libraryData.rotationz))\n            );\n\n            setBuiltin({ ...libraryData, builtinnew: false });\n          }\n        } else if (libraryData.builtintype == \"Floor_1000x1x1000\") {\n          console.log(\"floor imported\");\n          const preFloor =\n            scene.getMeshByID(libraryData.builtinname) ||\n            scene.getNodeByID(libraryData.builtinname);\n          if (preFloor) {\n            console.log(\"found exist!\");\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                libraryData.builtinname +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                preFloor.dispose();\n                let floor =  MeshBuilder.CreateBox(\n                  libraryData.builtinname,\n                  { width: 1000, height: 1, depth: 1000},\n                  scene\n                );\n                floor.position = new Vector3(\n                  Number(libraryData.positionx),\n                  Number(libraryData.positiony),\n                  Number(libraryData.positionz)\n                );\n                floor.scaling = new Vector3(\n                  Number(libraryData.scalex),\n                  Number(libraryData.scaley),\n                  Number(libraryData.scalez)\n                );\n                floor.rotation = new Vector3(\n                  degree_to_radians(Number(libraryData.rotationx)),\n                  degree_to_radians(Number(libraryData.rotationy)),\n                  degree_to_radians(Number(libraryData.rotationz))\n                );\n\n                \n                setBuiltin({ ...libraryData, builtinnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n          } else {\n            console.log(\"imported new mesh!\");\n            let floor =  MeshBuilder.CreateBox(\n              libraryData.builtinname,\n              { width: 1000, height: 1, depth: 1000},\n              scene\n            );\n            floor.position = new Vector3(\n              Number(libraryData.positionx),\n              Number(libraryData.positiony),\n              Number(libraryData.positionz)\n            );\n            floor.scaling = new Vector3(\n              Number(libraryData.scalex),\n              Number(libraryData.scaley),\n              Number(libraryData.scalez)\n            );\n            floor.rotation = new Vector3(\n              degree_to_radians(Number(libraryData.rotationx)),\n              degree_to_radians(Number(libraryData.rotationy)),\n              degree_to_radians(Number(libraryData.rotationz))\n            );\n            setBuiltin({ ...libraryData, builtinnew: false });\n          }\n        } else {\n          console.log(\"nothing selected\");\n        }\n      }\n      if (addData.addnew) {\n        console.log(\"add new prime request\");\n        if (addData.primetype == \"BOX\") {\n          const preBox =\n            scene.getMeshByID(addData.primename) ||\n            scene.getNodeByID(addData.primename);\n          if (preBox) {\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                addData.primename +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                preBox.dispose();\n                let box = MeshBuilder.CreateBox(\n                  addData.primename,\n                  { size: 1 },\n                  scene\n                );\n                box.position = new Vector3(\n                  Number(addData.positionx),\n                  Number(addData.positiony),\n                  Number(addData.positionz)\n                );\n                box.scaling = new Vector3(\n                  Number(addData.scalex),\n                  Number(addData.scaley),\n                  Number(addData.scalez)\n                );\n                box.rotation = new Vector3(\n                  degree_to_radians(Number(addData.rotationx)),\n                  degree_to_radians(Number(addData.rotationy)),\n                  degree_to_radians(Number(addData.rotationz))\n                );\n                setAdd({ ...addData, addnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n            // alert('Reminder: are you going to make changes to existing prime, name : ' + addData.primename + ' ?')\n          } else {\n            let box = MeshBuilder.CreateBox(\n              addData.primename,\n              { size: 1 },\n              scene\n            );\n            box.isPickable = true;\n            box.position = new Vector3(\n              Number(addData.positionx),\n              Number(addData.positiony),\n              Number(addData.positionz)\n            );\n            box.scaling = new Vector3(\n              Number(addData.scalex),\n              Number(addData.scaley),\n              Number(addData.scalez)\n            );\n            box.rotation = new Vector3(\n              degree_to_radians(Number(addData.rotationx)),\n              degree_to_radians(Number(addData.rotationy)),\n              degree_to_radians(Number(addData.rotationz))\n            );\n            setAdd({ ...addData, addnew: false });\n          }\n          //Added, need to track\n        } else if (addData.primetype == \"SPHERE\") {\n          const preSphere =\n            scene.getMeshByID(addData.primename) ||\n            scene.getNodeByID(addData.primename);\n          if (preSphere) {\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                addData.primename +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                preSphere.dispose();\n                let sphere = MeshBuilder.CreateSphere(\n                  addData.primename,\n                  { size: 1 },\n                  scene\n                );\n                sphere.position = new Vector3(\n                  Number(addData.positionx),\n                  Number(addData.positiony),\n                  Number(addData.positionz)\n                );\n                sphere.scaling = new Vector3(\n                  Number(addData.scalex),\n                  Number(addData.scaley),\n                  Number(addData.scalez)\n                );\n                sphere.rotation = new Vector3(\n                  degree_to_radians(Number(addData.rotationx)),\n                  degree_to_radians(Number(addData.rotationy)),\n                  degree_to_radians(Number(addData.rotationz))\n                );\n                setAdd({ ...addData, addnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n          } else {\n            let sphere = MeshBuilder.CreateSphere(\n              addData.primename,\n              { size: 1 },\n              scene\n            );\n            sphere.position = new Vector3(\n              Number(addData.positionx),\n              Number(addData.positiony),\n              Number(addData.positionz)\n            );\n            sphere.scaling = new Vector3(\n              Number(addData.scalex),\n              Number(addData.scaley),\n              Number(addData.scalez)\n            );\n            sphere.rotation = new Vector3(\n              degree_to_radians(Number(addData.rotationx)),\n              degree_to_radians(Number(addData.rotationy)),\n              degree_to_radians(Number(addData.rotationz))\n            );\n            setAdd({ ...addData, addnew: false });\n          }\n          //Added, need to track\n        } else if (addData.primetype == \"CYLINDER\") {\n          const preCylinder =\n            scene.getMeshByID(addData.primename) ||\n            scene.getNodeByID(addData.primename);\n          if (preCylinder) {\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                addData.primename +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                preCylinder.dispose();\n\n                let cylinder = MeshBuilder.CreateCylinder(\n                  addData.primename,\n                  { size: 1 },\n                  scene\n                );\n                cylinder.position = new Vector3(\n                  Number(addData.positionx),\n                  Number(addData.positiony),\n                  Number(addData.positionz)\n                );\n                cylinder.scaling = new Vector3(\n                  Number(addData.scalex),\n                  Number(addData.scaley),\n                  Number(addData.scalez)\n                );\n                cylinder.rotation = new Vector3(\n                  degree_to_radians(Number(addData.rotationx)),\n                  degree_to_radians(Number(addData.rotationy)),\n                  degree_to_radians(Number(addData.rotationz))\n                );\n                setAdd({ ...addData, addnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n            // alert('Reminder: are you going to make changes to existing prime, name : ' + addData.primename + ' ?')\n          } else {\n            let cylinder = MeshBuilder.CreateCylinder(\n              addData.primename,\n              { size: 1 },\n              scene\n            );\n            cylinder.position = new Vector3(\n              Number(addData.positionx),\n              Number(addData.positiony),\n              Number(addData.positionz)\n            );\n            cylinder.scaling = new Vector3(\n              Number(addData.scalex),\n              Number(addData.scaley),\n              Number(addData.scalez)\n            );\n            cylinder.rotation = new Vector3(\n              degree_to_radians(Number(addData.rotationx)),\n              degree_to_radians(Number(addData.rotationy)),\n              degree_to_radians(Number(addData.rotationz))\n            );\n            setAdd({ ...addData, addnew: false });\n          }\n          //Added, need to track\n        } else if (addData.primetype == \"POLYHYDRON\") {\n          const prePolyhedron =\n            scene.getMeshByID(addData.primename) ||\n            scene.getNodeByID(addData.primename);\n          if (prePolyhedron) {\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                addData.primename +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                prePolyhedron.dispose();\n                let polyhedron = Mesh.CreatePolyhedron(\n                  addData.primename,\n                  { type: addData.polyhydrontype, size: 1 },\n                  scene\n                );\n                polyhedron.position = new Vector3(\n                  Number(addData.positionx),\n                  Number(addData.positiony),\n                  Number(addData.positionz)\n                );\n                polyhedron.scaling = new Vector3(\n                  Number(addData.scalex),\n                  Number(addData.scaley),\n                  Number(addData.scalez)\n                );\n                polyhedron.rotation = new Vector3(\n                  degree_to_radians(Number(addData.rotationx)),\n                  degree_to_radians(Number(addData.rotationy)),\n                  degree_to_radians(Number(addData.rotationz))\n                );\n                setAdd({ ...addData, addnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n            // alert('Reminder: are you going to make changes to existing prime, name : ' + addData.primename + ' ?')\n          } else {\n            let polyhedron = Mesh.CreatePolyhedron(\n              addData.primename,\n              { type: addData.polyhydrontype, size: 1 },\n              scene\n            );\n            polyhedron.position = new Vector3(\n              Number(addData.positionx),\n              Number(addData.positiony),\n              Number(addData.positionz)\n            );\n            polyhedron.scaling = new Vector3(\n              Number(addData.scalex),\n              Number(addData.scaley),\n              Number(addData.scalez)\n            );\n            polyhedron.rotation = new Vector3(\n              degree_to_radians(Number(addData.rotationx)),\n              degree_to_radians(Number(addData.rotationy)),\n              degree_to_radians(Number(addData.rotationz))\n            );\n            setAdd({ ...addData, addnew: false });\n          }\n          //Added, need to track\n        }\n      }\n    }\n  }, [settingData, addData, fileControl, libraryData]);\n\n  const onSceneReady = (scene) => {\n    sceneRef.current = scene;\n\n    // This creates and positions a free camera (non-mesh)\n    let camera = new ArcRotateCamera(\n      \"mainCamera\",\n      0,\n      0,\n      10,\n      new Vector3(0, 0, 0),\n      scene\n    );\n    // This targets the camera to scene origin\n    camera.setPosition(new Vector3(0, 500, -600));\n    const canvas = scene.getEngine().getRenderingCanvas();\n    // This attaches the camera to the canvas\n    camera.attachControl(canvas, true);\n    // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\n    let light = new HemisphericLight(\"light\", new Vector3(0, 500, 0), scene);\n    // Default intensity is 1. Let's dim the light a small amount\n    light.intensity = 0.7;\n    // initial ground\n    let ground = MeshBuilder.CreateGround(\n      \"plane\",\n      { width: settingData.planesize, height: settingData.planesize },\n      scene\n    );\n    let groundMaterial = new GridMaterial(\"groundMaterial\", scene);\n    groundMaterial.majorUnitFrequency = 10;\n    groundMaterial.minorUnitVisibility = 0.5;\n    groundMaterial.gridRatio = settingData.gridsize; //smallest block size\n    groundMaterial.backFaceCulling = false;\n    groundMaterial.mainColor = new Color3(1, 1, 1);\n    groundMaterial.lineColor = new Color3(1.0, 1.0, 1.0);\n    groundMaterial.opacity = 0.98;\n    ground.material = groundMaterial;\n    ground.isPickable = false;\n  };\n  /**\n   * Will run on every frame render.  We are spinning the box on y-axis.\n   */\n  const onRender = (scene) => {\n    // if (settingData.planesize !== ground.width){\n    // console.log(ground.material.width)\n    // }\n    // if (ground !== undefined) {\n    //   var deltaTimeInMillis = scene.getEngine().getDeltaTime();\n    //   const rpm = 10;\n    //   ground.rotation.y += ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\n    // }\n  };\n\n  return (\n    <SceneComponent\n      antialias\n      onSceneReady={onSceneReady}\n      onRender={onRender}\n      id=\"viewport\"\n    ></SceneComponent>\n  );\n};\n\nexport default ViewPortComponent;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 'fit-content',\n    border: `1px solid ${theme.palette.divider}`,\n    // borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.secondary,\n    '& svg': {\n      margin: theme.spacing(1.5),\n    },\n    '& hr': {\n      margin: theme.spacing(0, 0.5),\n    },\n  },\n}));\n\nconst ScaleLine = props => {\n// export default function VerticalDividers() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Grid container alignItems=\"left\" className={classes.root}>\n              plane:\n        <Divider orientation=\"vertical\" flexItem />\n                {props.children.planesize}\n        <Divider orientation=\"vertical\" flexItem />\n              grid:  \n        <Divider orientation=\"vertical\" flexItem />\n            {props.children.gridsize}\n      </Grid>\n    </div>\n  );\n}\nexport default ScaleLine;","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Confirm from \"@material-ui/icons/Check\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textFieldtop: {\n    width: \"32ch\",\n    background: \"white\",\n    borderRadius: 8,\n    opacity: 0.8,\n  },\n  textField: {\n    width: \"16ch\",\n    background: \"white\",\n    borderRadius: 8,\n    opacity: 0.8,\n  },\n}));\n\nconst AddComponent = (props) => {\n  const classes = useStyles();\n  const [primeData, setPrime] = React.useState({\n    primetype: \"\",\n    primename: \"\",\n    polyhydrontype: null,\n    addnew: false,\n    positionx: 0,\n    positiony: 0,\n    positionz: 0,\n    scalex: 100,\n    scaley: 100,\n    scalez: 100,\n    rotationx: 0,\n    rotationy: 0,\n    rotationz: 0,\n  });\n\n  const handlePrimeChange = (event) => {\n    const name = event.target.name;\n    const eventvalue = event.target.value;\n    if (event.target.value == \"POLYHYDRON\") {\n      // console.log('found')\n\n      (async () => {\n        console.log(\"selected Polyhydron, now choose type\");\n        const { value: Polyhydrons } = await Swal.fire({\n          position: \"top\",\n          background: \"black\",\n          input: \"select\",\n          inputOptions: {\n            Polyhydrons: {\n              0: \"Tetrahedron\",\n              1: \"Octahedron\",\n              2: \"Dodecahedron\",\n              3: \"Icosahedron\",\n              4: \"Rhombicuboctahedron\",\n              5: \"Triangular Prism\",\n              6: \"Pentagonal Prism\",\n              7: \"HexagonalPrism\",\n              8: \"Square Pyramid (J1)\",\n              9: \"Pentagonal Pyramid (J2)\",\n              10: \"Triangular Dipyramid (J12)\",\n              11: \"Pentagonal Dipyramid (J13)\",\n              12: \"Elongated Square Dipyramid (J15)\",\n              13: \"Elongated Pentagonal Dipyramid (J16)\",\n              14: \"Elongated Pentagonal Cupola (J20)\",\n            },\n          },\n          inputPlaceholder: \"Select a Polyhydron\",\n          showCancelButton: true,\n          inputValidator: (value) => {\n            return new Promise((resolve) => {\n              resolve();\n            });\n          },\n        });\n        if (Polyhydrons) {\n          Swal.fire({\n            background: \"black\",\n            icon: \"success\",\n            text: \"Selected\",\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          setPrime({\n            ...primeData,\n            primetype: eventvalue,\n            polyhydrontype: Polyhydrons,\n            addnew: false,\n          });\n        }\n      })();\n    } else {\n      setPrime({\n        ...primeData,\n        [name]: event.target.value,\n        polyhydrontype: null,\n        addnew: false,\n      });\n    }\n\n    //handle child state change\n  };\n\n  const handlePositionChange = (prop) => (event) => {\n    setPrime({ ...primeData, [prop]: event.target.value, addnew: false });\n    //handle child state change\n  };\n\n  const handleClickAddConfirm = () => {\n    if (!primeData.primename){\n      Swal.fire({\n          background: \"black\",\n          icon: \"info\",\n          text: \"Please assign a name for your object\",\n        });\n  }\n  else{\n    setPrime({ ...primeData, addnew: true });\n    if (props.onChange) {\n      props.onChange(primeData);\n    }\n  }\n  };\n  return (\n    <div>\n      <div className={classes.margin}></div>\n      <Grid container direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <FormControl\n            size=\"small\"\n            variant=\"filled\"\n            className={classes.textFieldtop}\n          >\n            <InputLabel htmlFor=\"filled-age-native-simple\">\n              + Primes (All Fields Required)\n            </InputLabel>\n            <Select\n              native\n              value={primeData.primetype}\n              onChange={handlePrimeChange}\n              inputProps={{\n                name: \"primetype\",\n                id: \"filled-primes-native-simple\",\n              }}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value={\"BOX\"}>BOX</option>\n              <option value={\"SPHERE\"}>SPHERE</option>\n              <option value={\"CYLINDER\"}>CYLINDER</option>\n              <option value={\"POLYHYDRON\"}>POLYHYDRON</option>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <div>\n        <Grid container direction=\"row\" alignItems=\"left\">\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"left\">\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-name\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"object name\"\n                  type=\"string\"\n                  // defaultValue = {values.planesize}\n                  onChange={handlePositionChange(\"primename\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={\n                    {\n                      // startAdornment: <InputAdornment position=\"start\">required:</InputAdornment>,\n                    }\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-x\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  defaultValue={primeData.positionx}\n                  onChange={handlePositionChange(\"positionx\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">X:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-y\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"positiony\")}\n                  defaultValue={primeData.positiony}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Y:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-z\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"positionz\")}\n                  defaultValue={primeData.positionz}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Z:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-x\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"rotation-x (degree)\"\n                  type=\"number\"\n                  defaultValue = {primeData.rotationx}\n                  onChange={handlePositionChange(\"rotationx\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">X:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-y\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"rotation-y (degree)\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"rotationy\")}\n                 defaultValue = {primeData.rotationy}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Y:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-z\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"rotation-z (degree)\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"rotationz\")}\n                 defaultValue = {primeData.rotationz}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Z:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"left\">\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-x\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-x\"\n                  type=\"number\"\n                  defaultValue={primeData.scalex}\n                  onChange={handlePositionChange(\"scalex\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">X:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-y\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-y\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"scaley\")}\n                  defaultValue={primeData.scaley}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Y:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-z\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-z\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"scalez\")}\n                  defaultValue={primeData.scalez}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Z:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <div className={classes.margin}></div>\n              <Grid item>\n                <Fab\n                  size=\"small\"\n                  color=\"secondary\"\n                  aria-label=\"confirm grid\"\n                  onClick={handleClickAddConfirm}\n                  color={primeData.addnew ? \"primary\" : \"default\"}\n                >\n                  <Confirm />\n                </Fab>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default AddComponent;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SetIcon from '@material-ui/icons/TuneTwoTone';\nimport DownloadIcon from '@material-ui/icons/GetAppRounded';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Setting from './settingtable/SettingComponent';\nimport Upload from './uploadtable/UploadComponent';\nimport Library from './builtintable/BuiltInComponent';\nimport ViewPort from './viewer/ViewPortComponent';\nimport './ViewWithControl.css'\nimport Scaleline from './viewer/ScalelineComponent';\nimport Add from './addtable/AddComponent';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginRight: theme.spacing(2),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function FloatingActionButtons() {\n  const classes = useStyles();\n\n\n  const [settingData, setSettings] = React.useState( {\n    planesize: 6000,\n    gridsize: 50,\n    gridChange: false,\n    confirmed: false,\n    lightR: 0.45,\n    lightG: 0.45,\n    lightB: 0.45,\n  } );\n  \n  const [addData, setAdd] = React.useState({\n    primetype: '',\n    primename: '',\n    addnew: false,\n    positionx: 0,\n    positiony: 0,\n    positionz: 0,\n    scalex: 100,\n    scaley: 100,\n    scalez: 100,\n    rotationx: 0,\n    rotationy: 0,\n    rotationz: 0,\n  });\n\n  const [libraryData, setBuiltin] = React.useState({\n    buultintype: '',\n    builtinname: '',\n    builtinnew: false,\n    positionx: 0,\n    positiony: 0,\n    positionz: 0,\n    scalex: 1,\n    scaley: 1,\n    scalez: 1,\n    rotationx: 0,\n    rotationy: 0,\n    rotationz: 0,\n  });\n\n  const [fileControl, setFileControl] = React.useState( {\n    file: \"\",\n    fileadd: false,\n  } );\n\n  const changeAdd = data => {\n    if (data.primetype != addData.primetype || data.primename != addData.primename || data.positionx != addData.positionx || data.positiony != addData.positiony || data.positionz != addData.positionz || data.scalex != addData.scalex || data.scalez != addData.scalez || data.scaley != addData.scaley || data.rotationx != addData.rotationx || data.rotationy != addData.rotationy || data.rotationz != addData.rotationz){\n      setAdd({ ...data, addnew:true})\n    } \n  };\n\n  const changeLibrary = data => {\n    if (data.builtintype != libraryData.builtintype || data.builtinname != libraryData.builtinname || data.positionx != libraryData.positionx || data.positiony != libraryData.positiony || data.positionz != libraryData.positionz || data.scalex != libraryData.scalex || data.scalez != libraryData.scalez || data.scaley != libraryData.scaley || data.rotationx != libraryData.rotationx || data.rotationy != libraryData.rotationy || data.rotationz != libraryData.rotationz){\n      setBuiltin({ ...data, builtinnew:true})\n    } \n  };\n\n  const changeSettings = data => {\n    if ((data.planesize != settingData.planesize || data.gridsize != settingData.gridsize || data.lightR != settingData.lightR || data.lightB != settingData.lightB || data.lightG != settingData.lightG)){\n      console.log('a grid change happened')\n      setSettings({ ...data, gridChange: true})\n  }    \n    else{\n    console.log('no change needed')\n    }\n\n  };\n\n  const changeUpload = data => {\n    if (data.file.name != fileControl.file.name) {\n      console.log('a file add happened')\n      setFileControl({ ...data, fileadd:true})\n    } \n    else{\n      console.log('no need to change')\n    }\n  };\n\n  const [values, setValues] = React.useState({\n    showAdd: false,\n    showSettings: false,\n    showEdit: false,\n    showImport: false,\n    showLibrary: false,\n  });\n \n\n  const handleSettingClick = () => {\n    setValues({ showImport: false, showEdit: false, showAdd: false, showLibrary: false,showSettings: !values.showSettings });\n  };\n  const handleAddClick = () => {\n    setValues({ showImport: false, showEdit: false, showLibrary: false,showAdd: !values.showAdd, showSettings: false });\n  };\n  const handleLibraryClick = () => {\n    setValues({ showEdit: false, showAdd: false, showLibrary: !values.showLibrary, showSettings: false, showImport: false});\n  };\n  const handleImportClick = () => {\n    setValues({ showEdit: false, showAdd: false, showLibrary: false, showSettings: false, showImport: !values.showImport });\n  };\n\n  return (\n    \n    <div>\n      <div className = {classes.root}>\n      <div className = \"Navigation\">\n      <Fab  size=\"small\"  color = {values.showSettings ? \"primary\" : \"default\" } onClick={handleSettingClick} >\n        <SetIcon  aria-label=\"setting\"/>\n      </Fab>\n      <Fab size=\"small\"  aria-label=\"add\" color = {values.showAdd ? \"primary\" : \"default\" } onClick={handleAddClick}>\n        <AddIcon />\n      </Fab>\n      <Fab size=\"small\"  aria-label=\"add\" color = {values.showLibrary ? \"primary\" : \"default\" } onClick={handleLibraryClick}>\n        <LibraryAddIcon />\n      </Fab>\n      <Fab size=\"small\" aria-label=\"import\" color = {values.showImport ? \"primary\" : \"default\" } onClick={handleImportClick}>\n        <FontAwesomeIcon icon={faFileUpload} size=\"lg\"/>\n      </Fab>\n      <Fab size=\"small\"  aria-label=\"edit\">\n        <EditIcon />\n      </Fab>\n      <Fab size=\"small\"  aria-label=\"delete\">\n        <DeleteIcon />\n      </Fab>\n      <Fab size=\"small\" aria-label=\"download\">\n        <DownloadIcon />\n      </Fab>\n      {values.showSettings && <div className =\"SettingTable\"><Setting onChange={changeSettings}></Setting></div>}\n      {values.showAdd && <div className =\"AddTable\"><Add onChange={changeAdd} ></Add></div>}\n      {values.showImport && <div className =\"UploadTable\"><Upload onChange={changeUpload}></Upload></div>}\n      {values.showLibrary && <div className =\"LibraryTable\"><Library onChange={changeLibrary}></Library></div>}\n      </div>\n    </div>\n      <div className = \"BottomView\">\n      <ViewPort settingData = {settingData} setSettings = {setSettings} addData = {addData} setAdd = {setAdd} fileControl = {fileControl} setFileControl = {setFileControl} libraryData = {libraryData} setBuiltin = {setBuiltin}/>\n      </div>\n      <div className =\"Scaleline\"><Scaleline>{settingData}</Scaleline></div>\n    </div>\n\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nfunction handleClick(event) {\n  event.preventDefault();\n  window.open(\"https://www.muyangguo.xyz/\", \"_blank\");\n}\n\n\nexport default function SimpleBreadcrumbs() {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <Typography color=\"textPrimary\">Prototype V1</Typography>\n      <Link color=\"inherit\" href=\"https://www.muyangguo.xyz\" onClick={handleClick}>@Muyang Guo\n      </Link>\n    </Breadcrumbs>\n  );\n}","import React from 'react';\nimport View from './components/controllerview/ViewWithControl';\nimport './components/controllerview/ViewWithControl.css';\nimport Footer from './components/footer/FooterComponent';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <View></View>\n      <div className = \"Footer\">\n      <Footer></Footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}