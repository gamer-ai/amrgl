{"version":3,"sources":["components/controllerview/settingtable/SettingComponent.js","components/controllerview/uploadtable/UploadComponent.js","components/controllerview/builtintable/BuiltInComponent.js","components/controllerview/viewer/SceneComponent.js","components/controllerview/viewer/ViewPortComponent.js","components/controllerview/viewer/ScalelineComponent.js","components/controllerview/addtable/AddComponent.js","components/controllerview/ViewWithControl.js","components/footer/FooterComponent.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","sliderroot","width","spacing","slidermargin","height","margin","marginTop","marginRight","textField","background","borderRadius","opacity","RedSlider","withStyles","root","color","thumb","backgroundColor","border","marginLeft","boxShadow","active","valueLabel","left","track","rail","Slider","GreenSlider","BlueSlider","GridSettings","props","classes","React","useState","planesize","gridsize","gridChange","lightR","lightG","lightB","values","setValues","handleGridChange","prop","event","target","value","handleColorChange","slidervalue","className","Grid","container","direction","alignItems","item","TextField","size","id","variant","label","type","defaultValue","onChange","clsx","InputProps","startAdornment","InputAdornment","position","Fab","aria-label","onClick","Button","disabled","style","fontSize","valueLabelDisplay","min","max","step","FileUpload","file","confirmUpload","fileControl","setFile","name","files","textFieldtop","BuiltInComponent","builtintype","builtinname","builtinnew","positionx","positiony","positionz","scalex","scaley","scalez","builtinData","setBuiltin","handlePositionChange","FormControl","InputLabel","htmlFor","Select","native","inputProps","SceneComponent","reactCanvas","useRef","antialias","engineOptions","adaptToDeviceRatio","sceneOptions","onRender","rest","onSceneReady","window","innerWidth","innerHeight","useEffect","current","engine","Engine","stencil","scene","Scene","clearColor","Color3","setSize","isReady","onReadyObservable","addOnce","runRenderLoop","render","resize","newWidth","newHeight","getEngine","addEventListener","dispose","removeEventListener","ref","translategizmo","rotategizmo","utilLayer","highlight","ViewPortComponent","settingData","setSettings","addData","setAdd","setFileControl","libraryData","sceneRef","attachedMesh","UtilityLayerRenderer","PositionGizmo","RotationGizmo","HighlightLayer","updateGizmoRotationToMatchAttachedMesh","updateGizmoPositionToMatchAttachedMesh","onPointerDown","evt","pickResult","hit","console","log","pickedMesh","removeAllMeshes","addMesh","Magenta","prePlane","getMeshByID","prePlaneMaterial","getMaterialByID","_width","gridRatio","ground","MeshBuilder","CreateGround","groundMaterial","GridMaterial","majorUnitFrequency","minorUnitVisibility","backFaceCulling","mainColor","lineColor","material","isPickable","fileadd","SceneLoader","ImportMesh","newMeshes","scaling","Vector3","preShelf","Swal","fire","text","showDenyButton","allowOutsideClick","confirmButtonText","denyButtonText","then","result","isConfirmed","icon","showConfirmButton","timer","Number","isDenied","selectedBuiltin","addnew","primetype","preBox","primename","box","CreateBox","preSphere","sphere","CreateSphere","preCylinder","cylinder","CreateCylinder","prePolyhedron","polyhedron","Mesh","CreatePolyhedron","polyhydrontype","camera","ArcRotateCamera","setPosition","canvas","getRenderingCanvas","attachControl","HemisphericLight","intensity","palette","divider","paper","secondary","ScaleLine","Divider","orientation","flexItem","children","AddComponent","primeData","setPrime","eventvalue","a","input","inputOptions","Polyhydrons","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","inputPlaceholder","showCancelButton","inputValidator","Promise","resolve","extendedIcon","FloatingActionButtons","confirmed","buultintype","showAdd","showSettings","showEdit","showImport","showLibrary","faFileUpload","data","handleClick","preventDefault","open","SimpleBreadcrumbs","Breadcrumbs","Typography","Link","href","App","ReactDOM","document","getElementById"],"mappings":"6eAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,WAAY,CACVC,MAAO,IAAyB,EAAnBF,EAAMG,QAAQ,IAE7BC,aAAc,CACZC,OAAQL,EAAMG,QAAQ,IAExBG,OAAQ,CACNC,UAAWP,EAAMG,QAAQ,GACzBK,YAAaR,EAAMG,QAAQ,IAE7BM,UAAW,CACTP,MAAO,OACPQ,WAAY,QACZC,aAAc,EACdC,QAAS,QAIPC,EAAYC,YAAW,CAC3BC,KAAM,CACJC,MAAO,MACPX,OAAQ,GAEVY,MAAO,CACLZ,OAAQ,GACRH,MAAO,GACPgB,gBAAiB,OACjBC,OAAQ,yBACRZ,WAAY,EACZa,YAAa,GACb,6BAA8B,CAC5BC,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLpB,OAAQ,EACRM,aAAc,GAEhBe,KAAM,CACJrB,OAAQ,EACRM,aAAc,IA1BAG,CA4Bfa,KAEGC,EAAcd,YAAW,CAC7BC,KAAM,CACJC,MAAO,QACPX,OAAQ,GAEVY,MAAO,CACLZ,OAAQ,GACRH,MAAO,GACPgB,gBAAiB,OACjBC,OAAQ,yBACRZ,WAAY,EACZa,YAAa,GACb,6BAA8B,CAC5BC,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLpB,OAAQ,EACRM,aAAc,GAEhBe,KAAM,CACJrB,OAAQ,EACRM,aAAc,IA1BEG,CA4BjBa,KAEGE,EAAaf,YAAW,CAC5BC,KAAM,CACJC,MAAO,OACPX,OAAQ,GAEVY,MAAO,CACLZ,OAAQ,GACRH,MAAO,GACPgB,gBAAiB,OACjBC,OAAQ,yBACRZ,WAAY,EACZa,YAAa,GACb,6BAA8B,CAC5BC,UAAW,YAGfC,OAAQ,GACRC,WAAY,CACVC,KAAM,oBAERC,MAAO,CACLpB,OAAQ,EACRM,aAAc,GAEhBe,KAAM,CACJrB,OAAQ,EACRM,aAAc,IA1BCG,CA4BhBa,KAkHYG,EA9GM,SAAAC,GAAS,IAAD,EACrBC,EAAUlC,IADW,EAECmC,IAAMC,SAAS,CACzCC,UAAW,IACXC,SAAU,GACVC,YAAY,EACZC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,MARiB,mBAEpBC,EAFoB,KAEZC,EAFY,KAYrBC,EAAmB,SAACC,GAAD,OAAU,SAACC,GAAW,IAAD,EAC5CH,EAAU,2BAAKD,GAAN,uBAAeG,EAAOC,EAAMC,OAAOC,OAAnC,4BAAsD,GAAtD,OAGLC,EAAoB,SAACJ,GAAD,OAAU,SAACC,EAAOI,GAAiB,IAAD,EAC1DP,EAAU,2BAAKD,GAAN,uBAAeG,EAAOK,GAAtB,4BAA+C,GAA/C,OAsBX,OACE,sBAAKC,UAAWlB,EAAQjB,KAAxB,UACE,8BACA,eAACoC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,SAA3C,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACMC,KAAO,QACPC,GAAG,6BACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,aACNC,KAAK,SACLC,aAAgBrB,EAAON,UACvB4B,SAAUpB,EAAiB,aAC3BO,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,uBAI1B,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACQC,KAAO,QACPC,GAAG,4BACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,YACNC,KAAK,SACLE,SAAUpB,EAAiB,YAC3BmB,aAAgBrB,EAAOL,SACvBc,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eAAgB,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,uBAI5B,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACc,EAAA,GAAD,GAAKZ,KAAK,QAAQzC,MAAQ,YAAYsD,aAAW,eAAeC,QAvDzC,WAC7B7B,EAAU,2BAAKD,GAAN,IAAcJ,YAAY,KAC/BN,EAAMgC,UACNhC,EAAMgC,SAAStB,KAoDb,sBAA4GA,EAAOJ,WAAa,UAAY,WAA5I,yBACI,cAAC,IAAD,KADJ,WAMJ,cAACc,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,OAA3C,SACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACA,sBAAKL,UAAWlB,EAAQ/B,WAAxB,UACA,qBAAKiD,UAAWlB,EAAQ5B,eAExB,eAACoE,EAAA,EAAD,CAAQf,KAAO,QAAQgB,UAAQ,EAACC,MAAO,CAAE1D,MAAO,SAAhD,yBAAuE,cAAC,IAAD,CAAe2D,SAAW,aAC/F,qBAAKzB,UAAWlB,EAAQ5B,eACxB,cAACS,EAAD,CAAW+D,kBAAkB,OAAON,aAAW,kBAAkBR,aAAc,IAAMe,IAAO,EAAGC,IAAO,EAAGC,KAAQ,IAAMhB,SAAUf,EAAkB,YACnJ,qBAAKE,UAAWlB,EAAQ5B,eACxB,cAACyB,EAAD,CAAY+C,kBAAkB,OAAON,aAAW,kBAAkBR,aAAc,IAAMe,IAAO,EAAGC,IAAO,EAAGC,KAAQ,IAAMhB,SAAUf,EAAkB,YACpJ,qBAAKE,UAAWlB,EAAQ5B,eACxB,cAACwB,EAAD,CAAagD,kBAAkB,OAAON,aAAW,kBAAkBR,aAAc,IAAMe,IAAO,EAAGC,IAAO,EAAGC,KAAQ,IAAMhB,SAAUf,EAAkB,mBAUzJ,4B,iBC3NAlD,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCM,OAAQ,CACNC,UAAWP,EAAMG,QAAQ,GACzBK,YAAaR,EAAMG,QAAQ,IAE7BM,UAAW,CACTP,MAAO,OACPQ,WAAY,QACZC,aAAc,EACdC,QAAS,QAgEAoE,EAxDI,SAAAjD,GAAS,IAAD,EACnBC,EAAUlC,IADS,EAGMmC,IAAMC,SAAS,CAC1C+C,KAAM,GACNC,eAAe,IALM,mBAGlBC,EAHkB,KAGLC,EAHK,KAoBzB,OACE,qBAAKlC,UAAWlB,EAAQjB,KAAxB,SACA,8BACA,eAACoC,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,OAA9C,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACQC,KAAO,QACPC,GAAG,6BACHC,QAAQ,WACR3C,MAAM,YACN6C,KAAK,OACLC,aAAgBqB,EAAYF,KAAKI,KACjCtB,SAlBd,SAAsBlB,GACpBuC,EAAQ,CAACH,KAAKpC,EAAMC,OAAOwC,MAAM,GAAIJ,eAAe,KAkBxChC,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,eAGlD,cAAC0C,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,sBAAKG,GAAG,qBAAR,UACA,2CAAcyB,EAAYF,KAAKI,QAC/B,4CAAeF,EAAYF,KAAKxB,KAAhC,iBAGF,eAACN,EAAA,EAAD,CAAMI,MAAI,EAAV,UACE,qBAAKL,UAAWlB,EAAQ5B,eACtB,cAACiE,EAAA,GAAD,GAAKZ,KAAK,QAAQzC,MAAQ,YAAYsD,aAAW,gBAAgBC,QArCxC,WAC/Ba,EAAQ,2BAAID,GAAL,IAAkBD,eAAe,KACpCnD,EAAMgC,UACNhC,EAAMgC,SAASoB,KAkCb,sBAA+GA,EAAYD,cAAgB,UAAY,WAAvJ,yBACI,cAAC,IAAD,KADJ,e,2BCzDJpF,G,OAAYC,aAAW,SAACC,GAAD,MAAY,CACvCM,OAAQ,CACNC,UAAWP,EAAMG,QAAQ,GACzBK,YAAaR,EAAMG,QAAQ,IAE7BoF,aAAc,CACZrF,MAAO,OACPQ,WAAY,QACZC,aAAc,EACdC,QAAS,IAEXH,UAAW,CACTP,MAAO,OACPQ,WAAY,QACZC,aAAc,EACdC,QAAS,SAoOE4E,EAhOU,SAACzD,GAAW,IAAD,EAC5BC,EAAUlC,IADkB,EAEAmC,IAAMC,SAAS,CAC/CuD,YAAa,GACbC,YAAa,GACbC,YAAY,EACZC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,IAXwB,mBAE3BC,EAF2B,KAEdC,EAFc,KA0B5BC,EAAuB,SAACxD,GAAD,OAAU,SAACC,GAAW,IAAD,EAChDsD,EAAW,2BAAKD,GAAN,uBAAoBtD,EAAOC,EAAMC,OAAOC,OAAxC,4BAA2D,GAA3D,OAUZ,OACE,gCACE,qBAAKG,UAAWlB,EAAQ1B,SACxB,cAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,SAA3C,SACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAAC8C,EAAA,EAAD,CACE5C,KAAK,QACLE,QAAQ,SACRT,UAAWlB,EAAQuD,aAHrB,UAKE,cAACe,EAAA,EAAD,CAAYC,QAAQ,2BAApB,4CACA,eAACC,EAAA,EAAD,CACEC,QAAM,EACN1D,MAAOmD,EAAYT,YACnB1B,SArCgB,SAAClB,GAAW,IAAD,EAC/BwC,EAAOxC,EAAMC,OAAOuC,KACPxC,EAAMC,OAAOC,MAChCoD,EAAW,2BACJD,GADG,uBAELb,EAAOxC,EAAMC,OAAOC,OAFf,4BAGM,GAHN,MAmCA2D,WAAY,CACVrB,KAAM,cACN3B,GAAI,iCANR,UASE,wBAAQY,aAAW,OAAOvB,MAAM,KAChC,2BAAUa,MAAM,OAAhB,UACA,wBAAQb,MAAO,OAAf,kBACA,wBAAQA,MAAO,QAAf,sBAEA,0BAAUa,MAAM,eAAhB,SACA,wBAAQb,MAAO,2BAAf,kDAMR,8BACE,eAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,OAA3C,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,OAA9C,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,wBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,cACNC,KAAK,SAELE,SAAUqC,EAAqB,eAC/BlD,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WACE,OAMN,cAACd,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,kBACNC,KAAK,SACLC,aAAgBoC,EAAYN,UAC5B7B,SAAUqC,EAAqB,aAC/BlD,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAKR,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,kBACNC,KAAK,SACLE,SAAUqC,EAAqB,aAChCtC,aAAgBoC,EAAYL,UAC3B3C,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAKR,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,kBACNC,KAAK,SACLE,SAAUqC,EAAqB,aAChCtC,aAAgBoC,EAAYJ,UAC3B5C,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,0BAQZ,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,OAA9C,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,UACNC,KAAK,SACLC,aAAgBoC,EAAYH,OAC5BhC,SAAUqC,EAAqB,UAC/BlD,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAKR,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,UACNC,KAAK,SACLE,SAAUqC,EAAqB,UAC/BtC,aAAgBoC,EAAYF,OAC5B9C,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAKR,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,UACNC,KAAK,SACLE,SAAUqC,EAAqB,UAChCtC,aAAgBoC,EAAYD,OAC3B/C,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAKR,qBAAKlB,UAAWlB,EAAQ1B,SACxB,cAAC6C,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACc,EAAA,GAAD,GACEZ,KAAK,QACLzC,MAAM,YACNsD,aAAW,eACXC,QAnLc,WAC5B4B,EAAW,2BAAKD,GAAN,IAAmBP,YAAY,KACrC5D,EAAMgC,UACRhC,EAAMgC,SAASmC,KA4KL,sBAKSA,EAAYP,WAAa,UAAY,WAL9C,yBAOE,cAAC,IAAD,KAPF,oB,mCCjMDgB,EA5CQ,SAAC5E,GACpB,IAAM6E,EAAcC,iBAAO,MACnBC,EAAgG/E,EAAhG+E,UAAWC,EAAqFhF,EAArFgF,cAAeC,EAAsEjF,EAAtEiF,mBAAoBC,EAAkDlF,EAAlDkF,aAAcC,EAAoCnF,EAApCmF,SAA2BC,GAASpF,EAA1BqF,aAFhD,YAE0ErF,EAF1E,8FAGxB7B,EAAQmH,OAAOC,WACfjH,EAASgH,OAAOE,YAmCtB,OAlCAC,qBAAU,WACN,GAAIZ,EAAYa,QAAS,CACrB,IAAMC,EAAS,IAAIC,IAAOf,EAAYa,QAASX,EAAWC,EAAeC,EAAoB,CAAEY,SAAS,IAClGC,EAAQ,IAAIC,IAAMJ,EAAQT,GAChCY,EAAME,WAAa,IAAIC,IAAO,IAAM,IAAM,KAC1CN,EAAOO,QAAQ/H,EAAOG,GAClBwH,EAAMK,UACNnG,EAAMqF,aAAaS,GAEnBA,EAAMM,kBAAkBC,SAAQ,SAAAP,GAAK,OAAI9F,EAAMqF,aAAaS,MAEhEH,EAAOW,eAAc,WACO,oBAAbnB,GACPA,EAASW,GAEbA,EAAMS,YAEV,IAAMC,EAAS,WACX,IAAMC,EAAWnB,OAAOC,WAClBmB,EAAYpB,OAAOE,YACzBG,EAAOO,QAAQO,EAAUC,GACzBZ,EAAMa,YAAYH,UAKtB,OAHIlB,QACAA,OAAOsB,iBAAiB,SAAUJ,GAE/B,WACHV,EAAMa,YAAYE,UACdvB,QACAA,OAAOwB,oBAAoB,SAAUN,OAIlD,CAAC3B,IAEA,oCAASkC,IAAKlC,GAAiBO,KCtBnC4B,I,OAAiB,MACjBC,GAAc,KACdC,GAAY,KACZC,GAAY,KA8hBDC,GA5hBW,SAACpH,GAAW,IAElCqH,EAQErH,EARFqH,YACAC,EAOEtH,EAPFsH,YACAC,EAMEvH,EANFuH,QACAC,EAKExH,EALFwH,OACApE,EAIEpD,EAJFoD,YACAqE,EAGEzH,EAHFyH,eACAC,EAEE1H,EAFF0H,YACAtD,EACEpE,EADFoE,WAEIuD,EAAWzH,IAAM4E,OAAO,MAE9B5E,IAAMuF,WAAU,WACd,IAAMK,EAAQ6B,EAASjC,QAEvB,GAAII,EAAO,CA4CT,GA1CKkB,IAQHA,GAAeY,aAAe,KAC9BZ,GAAeH,UACfI,GAAYJ,UACZK,GAAUL,UACVM,GAAUN,UACVK,GAAY,IAAIW,IAAqB/B,GAErCkB,GAAiB,IAAIc,IAAcZ,IACnCD,GAAc,IAAIc,IAAcb,IAChCC,GAAY,IAAIa,IAAelC,KAhB/BoB,GAAY,IAAIW,IAAqB/B,GAErCkB,GAAiB,IAAIc,IAAcZ,IACnCD,GAAc,IAAIc,IAAcb,IAEhCC,GAAY,IAAIa,IAAelC,IAcjCkB,GAAeY,aAAe,KAE9BZ,GAAeiB,wCAAyC,EACxDjB,GAAekB,wCAAyC,EACxDjB,GAAYgB,wCAAyC,EACrDhB,GAAYiB,wCAAyC,EAErDpC,EAAMqC,cAAgB,SAAUC,EAAKC,GAG/BA,EAAWC,KACbC,QAAQC,IAAIH,EAAWI,WAAWnF,MAClC6D,GAAUuB,kBACV1B,GAAeY,aAAeS,EAAWI,WACzCxB,GAAYW,aAAeS,EAAWI,WACtCtB,GAAUwB,QAAQN,EAAWI,WAAYxC,IAAO2C,aAEhD5B,GAAeY,aAAe,KAC9BX,GAAYW,aAAe,KAC3BT,GAAUuB,oBAGVrB,EAAY/G,WAAY,CAC1BiI,QAAQC,IAAI,uBACZ1C,EAAME,WAAa,IAAIC,IACrBoB,EAAY9G,OACZ8G,EAAY7G,OACZ6G,EAAY5G,QAEd,IAAMoI,EAAW/C,EAAMgD,YAAY,SAC7BC,EAAmBjD,EAAMkD,gBAAgB,kBAC/C,GACEH,EAASI,QAAU5B,EAAYjH,WAC/B2I,EAAiBG,WAAa7B,EAAYhH,SAC1C,CACAwI,EAAShC,UACTkC,EAAiBlC,UACjB,IAAIsC,EAASC,IAAYC,aACvB,QACA,CAAElL,MAAOkJ,EAAYjH,UAAW9B,OAAQ+I,EAAYjH,WACpD0F,GAEEwD,EAAiB,IAAIC,IAAa,iBAAkBzD,GACxDwD,EAAeE,mBAAqB,GACpCF,EAAeG,oBAAsB,GACrCH,EAAeJ,UAAY7B,EAAYhH,SACvCiJ,EAAeI,iBAAkB,EACjCJ,EAAeK,UAAY,IAAI1D,IAAO,EAAG,EAAG,GAC5CqD,EAAeM,UAAY,IAAI3D,IAAO,EAAK,EAAK,GAChDqD,EAAezK,QAAU,IACzBsK,EAAOU,SAAWP,EAClBH,EAAOW,YAAa,EAGtBxC,EAAY,2BAAKD,GAAN,IAAmB/G,YAAY,KAqB5C,GAnBI8C,EAAY2G,UACdxB,QAAQC,IAAIpF,EAAYF,MAExB8G,IAAYC,WACV,GACA,0GACA,GACAnE,GACA,SAAUoE,GACR3B,QAAQC,IAAI0B,EAAU,GAAG5G,MACzBiF,QAAQC,IAAI0B,GAEUA,EAAU,GAEhBC,QAAU,IAAIC,IAAQ,EAAG,EAAG,MAGhD3C,EAAe,2BAAKrE,GAAN,IAAmB2G,SAAS,MAExCrC,EAAY9D,aACd2E,QAAQC,IAAI,uCACmB,4BAA3Bd,EAAYhE,aAA2C,CACzD,IAAM2G,EAAWvE,EAAMgD,YAAYpB,EAAY/D,aAE/C4E,QAAQC,IAAI6B,GACRA,GACF9B,QAAQC,IAAI,gBACZ8B,IAAKC,KAAK,CACRlI,SAAU,MACVmI,KACE,iDACA9C,EAAY/D,YACZ,KACF8G,gBAAgB,EAChB9L,WAAY,QACZ+L,mBAAmB,EACnBC,kBAAkB,UAClBC,eAAe,WACdC,MAAK,SAACC,GAEHA,EAAOC,aACTT,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,UACNR,KAAM,SACNS,mBAAmB,EACnBC,MAAO,OAETb,EAAShI,SAAW,IAAI+H,IACtBe,OAAOzD,EAAY7D,WACnBsH,OAAOzD,EAAY5D,WACnBqH,OAAOzD,EAAY3D,YAErBsG,EAASF,QAAU,IAAIC,IACrBe,OAAOzD,EAAY1D,QACnBmH,OAAOzD,EAAYzD,QACnBkH,OAAOzD,EAAYxD,SAErBE,EAAW,2BAAKsD,GAAN,IAAmB9D,YAAY,MAEhCkH,EAAOM,UAChBd,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,OACNR,KAAM,kDAKZjC,QAAQC,IAAI,sBACZwB,IAAYC,WACV,GACA,0GACA,GACAnE,GACA,SAAUoE,GACR,IAAImB,EAAkBnB,EAAU,GAChCmB,EAAgB1J,GAAK+F,EAAY/D,YACjC4E,QAAQC,IAAI6C,EAAgB/H,MAC5B+H,EAAgBhJ,SAAW,IAAI+H,IAC7Be,OAAOzD,EAAY7D,WACnBsH,OAAOzD,EAAY5D,WACnBqH,OAAOzD,EAAY3D,YAErBsH,EAAgBlB,QAAU,IAAIC,IAC5Be,OAAOzD,EAAY1D,QACnBmH,OAAOzD,EAAYzD,QACnBkH,OAAOzD,EAAYxD,YAIzBE,EAAW,2BAAKsD,GAAN,IAAmB9D,YAAY,MAI/C,GAAI2D,EAAQ+D,OAEV,GADA/C,QAAQC,IAAI,yBACa,OAArBjB,EAAQgE,UAAoB,CAC9B,IAAMC,EAAS1F,EAAMgD,YAAYvB,EAAQkE,WACzC,GAAID,EACFlB,IAAKC,KAAK,CACRlI,SAAU,MACVmI,KACE,iDACAjD,EAAQkE,UACR,KACFhB,gBAAgB,EAChB9L,WAAY,QACZ+L,mBAAmB,EACnBC,kBAAkB,UAClBC,eAAe,WACdC,MAAK,SAACC,GAEP,GAAIA,EAAOC,YAAa,CACtBT,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,UACNR,KAAM,SACNS,mBAAmB,EACnBC,MAAO,OAETM,EAAO3E,UACP,IAAI6E,EAAMtC,IAAYuC,UACpBpE,EAAQkE,UACR,CAAE/J,KAAM,GACRoE,GAEF4F,EAAIrJ,SAAW,IAAI+H,IACjBe,OAAO5D,EAAQ1D,WACfsH,OAAO5D,EAAQzD,WACfqH,OAAO5D,EAAQxD,YAEjB2H,EAAIvB,QAAU,IAAIC,IAChBe,OAAO5D,EAAQvD,QACfmH,OAAO5D,EAAQtD,QACfkH,OAAO5D,EAAQrD,SAEjBsD,EAAO,2BAAKD,GAAN,IAAe+D,QAAQ,UAEpBR,EAAOM,UAChBd,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,OACNR,KAAM,oDAKP,CACL,IAAIkB,EAAMtC,IAAYuC,UACpBpE,EAAQkE,UACR,CAAE/J,KAAM,GACRoE,GAEF4F,EAAI5B,YAAa,EACjB4B,EAAIrJ,SAAW,IAAI+H,IACjBe,OAAO5D,EAAQ1D,WACfsH,OAAO5D,EAAQzD,WACfqH,OAAO5D,EAAQxD,YAEjB2H,EAAIvB,QAAU,IAAIC,IAChBe,OAAO5D,EAAQvD,QACfmH,OAAO5D,EAAQtD,QACfkH,OAAO5D,EAAQrD,SAEjBsD,EAAO,2BAAKD,GAAN,IAAe+D,QAAQ,WAG1B,GAAyB,UAArB/D,EAAQgE,UAAuB,CACxChD,QAAQC,IAAI,UACZ,IAAMoD,EAAY9F,EAAMgD,YAAYvB,EAAQkE,WAC5C,GAAIG,EACFtB,IAAKC,KAAK,CACRlI,SAAU,MACVmI,KACE,iDACAjD,EAAQkE,UACR,KACFhB,gBAAgB,EAChB9L,WAAY,QACZ+L,mBAAmB,EACnBC,kBAAkB,UAClBC,eAAe,WACdC,MAAK,SAACC,GAEP,GAAIA,EAAOC,YAAa,CACtBT,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,UACNR,KAAM,SACNS,mBAAmB,EACnBC,MAAO,OAETU,EAAU/E,UACV,IAAIgF,EAASzC,IAAY0C,aACvBvE,EAAQkE,UACR,CAAE/J,KAAM,GACRoE,GAEF+F,EAAOxJ,SAAW,IAAI+H,IACpBe,OAAO5D,EAAQ1D,WACfsH,OAAO5D,EAAQzD,WACfqH,OAAO5D,EAAQxD,YAEjB8H,EAAO1B,QAAU,IAAIC,IACnBe,OAAO5D,EAAQvD,QACfmH,OAAO5D,EAAQtD,QACfkH,OAAO5D,EAAQrD,SAEjBsD,EAAO,2BAAKD,GAAN,IAAe+D,QAAQ,UAEpBR,EAAOM,UAChBd,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,OACNR,KAAM,oDAIP,CACL,IAAIqB,EAASzC,IAAY0C,aACvBvE,EAAQkE,UACR,CAAE/J,KAAM,GACRoE,GAEF+F,EAAOxJ,SAAW,IAAI+H,IACpBe,OAAO5D,EAAQ1D,WACfsH,OAAO5D,EAAQzD,WACfqH,OAAO5D,EAAQxD,YAEjB8H,EAAO1B,QAAU,IAAIC,IACnBe,OAAO5D,EAAQvD,QACfmH,OAAO5D,EAAQtD,QACfkH,OAAO5D,EAAQrD,SAEjBsD,EAAO,2BAAKD,GAAN,IAAe+D,QAAQ,WAG1B,GAAyB,YAArB/D,EAAQgE,UAAyB,CAC1C,IAAMQ,EAAcjG,EAAMgD,YAAYvB,EAAQkE,WAC9C,GAAIM,EACFzB,IAAKC,KAAK,CACRlI,SAAU,MACVmI,KACE,iDACAjD,EAAQkE,UACR,KACFhB,gBAAgB,EAChB9L,WAAY,QACZ+L,mBAAmB,EACnBC,kBAAkB,UAClBC,eAAe,WACdC,MAAK,SAACC,GAEP,GAAIA,EAAOC,YAAa,CACtBT,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,UACNR,KAAM,SACNS,mBAAmB,EACnBC,MAAO,OAETa,EAAYlF,UAEZ,IAAImF,EAAW5C,IAAY6C,eACzB1E,EAAQkE,UACR,CAAE/J,KAAM,GACRoE,GAEFkG,EAAS3J,SAAW,IAAI+H,IACtBe,OAAO5D,EAAQ1D,WACfsH,OAAO5D,EAAQzD,WACfqH,OAAO5D,EAAQxD,YAEjBiI,EAAS7B,QAAU,IAAIC,IACrBe,OAAO5D,EAAQvD,QACfmH,OAAO5D,EAAQtD,QACfkH,OAAO5D,EAAQrD,SAEjBsD,EAAO,2BAAKD,GAAN,IAAe+D,QAAQ,UAEpBR,EAAOM,UAChBd,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,OACNR,KAAM,oDAKP,CACL,IAAIwB,EAAW5C,IAAY6C,eACzB1E,EAAQkE,UACR,CAAE/J,KAAM,GACRoE,GAEFkG,EAAS3J,SAAW,IAAI+H,IACtBe,OAAO5D,EAAQ1D,WACfsH,OAAO5D,EAAQzD,WACfqH,OAAO5D,EAAQxD,YAEjBiI,EAAS7B,QAAU,IAAIC,IACrBe,OAAO5D,EAAQvD,QACfmH,OAAO5D,EAAQtD,QACfkH,OAAO5D,EAAQrD,SAEjBsD,EAAO,2BAAKD,GAAN,IAAe+D,QAAQ,WAG1B,GAAyB,cAArB/D,EAAQgE,UAA2B,CAC5C,IAAMW,EAAgBpG,EAAMgD,YAAYvB,EAAQkE,WAChD,GAAIS,EACF5B,IAAKC,KAAK,CACRlI,SAAU,MACVmI,KACE,iDACAjD,EAAQkE,UACR,KACFhB,gBAAgB,EAChB9L,WAAY,QACZ+L,mBAAmB,EACnBC,kBAAkB,UAClBC,eAAe,WACdC,MAAK,SAACC,GAEP,GAAIA,EAAOC,YAAa,CACtBT,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,UACNR,KAAM,SACNS,mBAAmB,EACnBC,MAAO,OAETgB,EAAcrF,UACd,IAAIsF,EAAaC,IAAKC,iBACpB9E,EAAQkE,UACR,CAAE3J,KAAMyF,EAAQ+E,eAAgB5K,KAAM,GACtCoE,GAEFqG,EAAW9J,SAAW,IAAI+H,IACxBe,OAAO5D,EAAQ1D,WACfsH,OAAO5D,EAAQzD,WACfqH,OAAO5D,EAAQxD,YAEjBoI,EAAWhC,QAAU,IAAIC,IACvBe,OAAO5D,EAAQvD,QACfmH,OAAO5D,EAAQtD,QACfkH,OAAO5D,EAAQrD,SAEjBsD,EAAO,2BAAKD,GAAN,IAAe+D,QAAQ,UAEpBR,EAAOM,UAChBd,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,OACNR,KAAM,oDAKP,CACL,IAAI2B,EAAaC,IAAKC,iBACpB9E,EAAQkE,UACR,CAAE3J,KAAMyF,EAAQ+E,eAAgB5K,KAAM,GACtCoE,GAEFqG,EAAW9J,SAAW,IAAI+H,IACxBe,OAAO5D,EAAQ1D,WACfsH,OAAO5D,EAAQzD,WACfqH,OAAO5D,EAAQxD,YAEjBoI,EAAWhC,QAAU,IAAIC,IACvBe,OAAO5D,EAAQvD,QACfmH,OAAO5D,EAAQtD,QACfkH,OAAO5D,EAAQrD,SAEjBsD,EAAO,2BAAKD,GAAN,IAAe+D,QAAQ,UAMpC,CAACjE,EAAaE,EAASnE,EAAasE,IAsDvC,OACE,cAAC,EAAD,CACE3C,WAAS,EACTM,aAvDiB,SAACS,GACpB6B,EAASjC,QAAUI,EAGnB,IAAIyG,EAAS,IAAIC,IACf,aACA,EACA,EACA,GACA,IAAIpC,IAAQ,EAAG,EAAG,GAClBtE,GAGFyG,EAAOE,YAAY,IAAIrC,IAAQ,EAAG,KAAM,MACxC,IAAMsC,EAAS5G,EAAMa,YAAYgG,qBAEjCJ,EAAOK,cAAcF,GAAQ,GAEjB,IAAIG,IAAiB,QAAS,IAAIzC,IAAQ,EAAG,IAAK,GAAItE,GAE5DgH,UAAY,GAElB,IAAI3D,EAASC,IAAYC,aACvB,QACA,CAAElL,MAAOkJ,EAAYjH,UAAW9B,OAAQ+I,EAAYjH,WACpD0F,GAEEwD,EAAiB,IAAIC,IAAa,iBAAkBzD,GACxDwD,EAAeE,mBAAqB,GACpCF,EAAeG,oBAAsB,GACrCH,EAAeJ,UAAY7B,EAAYhH,SACvCiJ,EAAeI,iBAAkB,EACjCJ,EAAeK,UAAY,IAAI1D,IAAO,EAAG,EAAG,GAC5CqD,EAAeM,UAAY,IAAI3D,IAAO,EAAK,EAAK,GAChDqD,EAAezK,QAAU,IACzBsK,EAAOU,SAAWP,EAClBH,EAAOW,YAAa,GAoBlB3E,SAfa,SAACW,KAgBdnE,GAAG,c,mBC5iBH5D,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCe,KAAM,CACJb,MAAO,cACPiB,OAAO,aAAD,OAAenB,EAAM8O,QAAQC,SAEnC7N,gBAAiBlB,EAAM8O,QAAQpO,WAAWsO,MAC1ChO,MAAOhB,EAAM8O,QAAQvC,KAAK0C,UAC1B,QAAS,CACP3O,OAAQN,EAAMG,QAAQ,MAExB,OAAQ,CACNG,OAAQN,EAAMG,QAAQ,EAAG,UAuBhB+O,GAlBG,SAAAnN,GAEhB,IAAMC,EAAUlC,KAEhB,OACE,8BACE,eAACqD,EAAA,EAAD,CAAMC,WAAS,EAACE,WAAW,OAAOJ,UAAWlB,EAAQjB,KAArD,mBAEE,cAACoO,GAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IAC/BtN,EAAMuN,SAASnN,UACxB,cAACgN,GAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IAJ1C,QAME,cAACF,GAAA,EAAD,CAASC,YAAY,WAAWC,UAAQ,IACnCtN,EAAMuN,SAASlN,e,+BCpBtBtC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCM,OAAQ,CACNC,UAAWP,EAAMG,QAAQ,GACzBK,YAAaR,EAAMG,QAAQ,IAE7BoF,aAAc,CACZrF,MAAO,OACPQ,WAAY,QACZC,aAAc,EACdC,QAAS,IAEXH,UAAW,CACTP,MAAO,OACPQ,WAAY,QACZC,aAAc,EACdC,QAAS,QA2RE2O,GAvRM,SAACxN,GAAW,IAAD,EACxBC,EAAUlC,KADc,EAEAmC,IAAMC,SAAS,CAC3CoL,UAAW,GACXE,UAAW,GACXa,eAAgB,KAChBhB,QAAQ,EACRzH,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,MAZoB,mBAEvBuJ,EAFuB,KAEZC,EAFY,KAkFxBrJ,EAAuB,SAACxD,GAAD,OAAU,SAACC,GAAW,IAAD,EAChD4M,EAAS,2BAAKD,GAAN,uBAAkB5M,EAAOC,EAAMC,OAAOC,OAAtC,wBAAqD,GAArD,OAUV,OACE,gCACE,qBAAKG,UAAWlB,EAAQ1B,SACxB,cAAC6C,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,SAA3C,SACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAAC8C,EAAA,EAAD,CACE5C,KAAK,QACLE,QAAQ,SACRT,UAAWlB,EAAQuD,aAHrB,UAKE,cAACe,EAAA,EAAD,CAAYC,QAAQ,2BAApB,4CAGA,eAACC,EAAA,EAAD,CACEC,QAAM,EACN1D,MAAOyM,EAAUlC,UACjBvJ,SA9Fc,SAAClB,GACzB,IAsDO,EAtDDwC,EAAOxC,EAAMC,OAAOuC,KACpBqK,EAAa7M,EAAMC,OAAOC,MACN,cAAtBF,EAAMC,OAAOC,MAGf,wBAAC,+BAAA4M,EAAA,6DACCrF,QAAQC,IAAI,wCADb,SAEsC8B,IAAKC,KAAK,CAC7ClI,SAAU,MACV1D,WAAY,QACZkP,MAAO,SACPC,aAAc,CACZC,YAAa,CACXC,EAAG,cACHC,EAAG,aACHC,EAAG,eACHC,EAAG,cACHC,EAAG,sBACHC,EAAG,mBACHC,EAAG,mBACHC,EAAG,iBACHC,EAAG,sBACHC,EAAG,0BACHC,GAAI,6BACJC,GAAI,6BACJC,GAAI,mCACJC,GAAI,uCACJC,GAAI,sCAGRC,iBAAkB,sBAClBC,kBAAkB,EAClBC,eAAgB,SAACjO,GACf,OAAO,IAAIkO,SAAQ,SAACC,GAClBA,UA7BP,iBAEgBpB,EAFhB,EAES/M,SAgCNsJ,IAAKC,KAAK,CACR5L,WAAY,QACZqM,KAAM,UACNR,KAAM,WACNS,mBAAmB,EACnBC,MAAO,OAETwC,EAAS,2BACJD,GADG,IAENlC,UAAWoC,EACXrB,eAAgByB,EAChBzC,QAAQ,MA7Cb,0CAAD,GAkDAoC,EAAS,2BACJD,GADG,uBAELnK,EAAOxC,EAAMC,OAAOC,OAFf,+BAGU,MAHV,wBAIE,GAJF,MAuCA2D,WAAY,CACVrB,KAAM,YACN3B,GAAI,+BANR,UASE,wBAAQY,aAAW,OAAOvB,MAAM,KAChC,wBAAQA,MAAO,MAAf,iBACA,wBAAQA,MAAO,SAAf,oBACA,wBAAQA,MAAO,WAAf,sBACA,wBAAQA,MAAO,aAAf,kCAKR,8BACE,eAACI,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,WAAW,OAA3C,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,OAA9C,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,wBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,cACNC,KAAK,SAELE,SAAUqC,EAAqB,aAC/BlD,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WACE,OAMN,cAACd,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,kBACNC,KAAK,SACLC,aAAc0L,EAAU5J,UACxB7B,SAAUqC,EAAqB,aAC/BlD,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAKR,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,kBACNC,KAAK,SACLE,SAAUqC,EAAqB,aAC/BtC,aAAc0L,EAAU3J,UACxB3C,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAKR,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,kBACNC,KAAK,SACLE,SAAUqC,EAAqB,aAC/BtC,aAAc0L,EAAU1J,UACxB5C,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,0BAQZ,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,eAACJ,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,SAASC,WAAW,OAA9C,UACE,cAACH,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,UACNC,KAAK,SACLC,aAAc0L,EAAUzJ,OACxBhC,SAAUqC,EAAqB,UAC/BlD,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAKR,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,UACNC,KAAK,SACLE,SAAUqC,EAAqB,UAC/BtC,aAAc0L,EAAUxJ,OACxB9C,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAKR,cAACjB,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACC,EAAA,EAAD,CACEC,KAAK,QACLC,GAAG,qBACHC,QAAQ,SACR3C,MAAM,YACN4C,MAAM,UACNC,KAAK,SACLE,SAAUqC,EAAqB,UAC/BtC,aAAc0L,EAAUvJ,OACxB/C,UAAWc,YAAKhC,EAAQ1B,OAAQ0B,EAAQvB,WACxCwD,WAAY,CACVC,eACE,cAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,qBAKR,qBAAKlB,UAAWlB,EAAQ1B,SACxB,cAAC6C,EAAA,EAAD,CAAMI,MAAI,EAAV,SACE,cAACc,EAAA,GAAD,GACEZ,KAAK,QACLzC,MAAM,YACNsD,aAAW,eACXC,QAlLc,WAC5BkL,EAAS,2BAAKD,GAAN,IAAiBnC,QAAQ,KAC7BtL,EAAMgC,UACRhC,EAAMgC,SAASyL,KA2KL,sBAKSA,EAAUnC,OAAS,UAAY,WALxC,yBAOE,cAAC,IAAD,KAPF,oB,oBCnRVvN,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvCe,KAAM,CACJ,QAAS,CACPP,YAAaR,EAAMG,QAAQ,KAG/BgR,aAAc,CACZ3Q,YAAaR,EAAMG,QAAQ,QAIhB,SAASiR,KACtB,IAAMpP,EAAUlC,KAD8B,EAIXmC,IAAMC,SAAU,CACjDC,UAAW,IACXC,SAAU,GACVC,YAAY,EACZgP,WAAW,EACX/O,OAAQ,IACRC,OAAQ,IACRC,OAAQ,MAXoC,mBAIvC4G,EAJuC,KAI1BC,EAJ0B,OAcpBpH,IAAMC,SAAS,CACvCoL,UAAW,GACXE,UAAW,GACXH,QAAQ,EACRzH,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,OAAQ,IACRC,OAAQ,IACRC,OAAQ,MAvBoC,mBAcvCqD,EAduC,KAc9BC,EAd8B,OA0BZtH,IAAMC,SAAS,CAC/CoP,YAAa,GACb5L,YAAa,GACbC,YAAY,EACZC,UAAW,EACXC,UAAW,EACXC,UAAW,EACXC,OAAQ,EACRC,OAAQ,EACRC,OAAQ,IAnCoC,mBA0BvCwD,EA1BuC,KA0B1BtD,EA1B0B,OAsCRlE,IAAMC,SAAU,CACpD+C,KAAM,GACN6G,SAAS,IAxCmC,mBAsCvC3G,EAtCuC,KAsC1BqE,EAtC0B,OA4ElBvH,IAAMC,SAAS,CACzCqP,SAAS,EACTC,cAAc,EACdC,UAAU,EACVC,YAAY,EACZC,aAAa,IAjF+B,mBA4EvClP,EA5EuC,KA4E/BC,EA5E+B,KAkG9C,OAEE,gCACE,qBAAKQ,UAAalB,EAAQjB,KAA1B,SACA,sBAAKmC,UAAY,aAAjB,UACA,cAACmB,EAAA,EAAD,CAAMZ,KAAK,QAASzC,MAASyB,EAAO+O,aAAe,UAAY,UAAYjN,QAlBpD,WACzB7B,EAAU,CAAEgP,YAAY,EAAOD,UAAU,EAAOF,SAAS,EAAOI,aAAa,EAAMH,cAAe/O,EAAO+O,gBAiBvG,SACE,cAAC,IAAD,CAAUlN,aAAW,cAEvB,cAACD,EAAA,EAAD,CAAKZ,KAAK,QAASa,aAAW,MAAMtD,MAASyB,EAAO8O,QAAU,UAAY,UAAYhN,QAlBnE,WACrB7B,EAAU,CAAEgP,YAAY,EAAOD,UAAU,EAAOE,aAAa,EAAMJ,SAAU9O,EAAO8O,QAASC,cAAc,KAiBzG,SACE,cAAC,IAAD,MAEF,cAACnN,EAAA,EAAD,CAAKZ,KAAK,QAASa,aAAW,MAAMtD,MAASyB,EAAOkP,YAAc,UAAY,UAAYpN,QAlBnE,WACzB7B,EAAU,CAAE+O,UAAU,EAAOF,SAAS,EAAOI,aAAclP,EAAOkP,YAAaH,cAAc,EAAOE,YAAY,KAiB9G,SACE,cAAC,IAAD,MAEF,cAACrN,EAAA,EAAD,CAAKZ,KAAK,QAAQa,aAAW,SAAStD,MAASyB,EAAOiP,WAAa,UAAY,UAAYnN,QAlBrE,WACxB7B,EAAU,CAAE+O,UAAU,EAAOF,SAAS,EAAOI,aAAa,EAAOH,cAAc,EAAOE,YAAajP,EAAOiP,cAiBxG,SACE,cAAC,KAAD,CAAiB3E,KAAM6E,KAAcnO,KAAK,SAE5C,cAACY,EAAA,EAAD,CAAKZ,KAAK,QAASa,aAAW,OAA9B,SACE,cAAC,IAAD,MAEF,cAACD,EAAA,EAAD,CAAKZ,KAAK,QAASa,aAAW,SAA9B,SACE,cAAC,IAAD,MAEF,cAACD,EAAA,EAAD,CAAKZ,KAAK,QAAQa,aAAW,WAA7B,SACE,cAAC,IAAD,MAED7B,EAAO+O,cAAgB,qBAAKtO,UAAW,eAAhB,SAA+B,cAAC,EAAD,CAASa,SArE7C,SAAA8N,GAChBA,EAAK1P,WAAaiH,EAAYjH,WAAa0P,EAAKzP,UAAYgH,EAAYhH,UAAYyP,EAAKvP,QAAU8G,EAAY9G,QAAUuP,EAAKrP,QAAU4G,EAAY5G,QAAUqP,EAAKtP,QAAU6G,EAAY7G,QAC5L+H,QAAQC,IAAI,0BACZlB,EAAY,2BAAKwI,GAAN,IAAYxP,YAAY,MAGrCiI,QAAQC,IAAI,yBAgET9H,EAAO8O,SAAW,qBAAKrO,UAAW,WAAhB,SAA2B,cAAC,GAAD,CAAKa,SAlFrC,SAAA8N,GACZA,EAAKvE,WAAahE,EAAQgE,WAAauE,EAAKrE,WAAalE,EAAQkE,WAAaqE,EAAKjM,WAAa0D,EAAQ1D,WAAaiM,EAAKhM,WAAayD,EAAQzD,WAAagM,EAAK/L,WAAawD,EAAQxD,WAAa+L,EAAK9L,QAAUuD,EAAQvD,QAAU8L,EAAK5L,QAAUqD,EAAQrD,QAAU4L,EAAK7L,QAAUsD,EAAQtD,QAC9RuD,EAAO,2BAAKsI,GAAN,IAAYxE,QAAO,UAiFxB5K,EAAOiP,YAAc,qBAAKxO,UAAW,cAAhB,SAA8B,cAAC,EAAD,CAAQa,SA5D3C,SAAA8N,GACfA,EAAK5M,KAAKI,MAAQF,EAAYF,KAAKI,MACrCiF,QAAQC,IAAI,uBACZf,EAAe,2BAAKqI,GAAN,IAAY/F,SAAQ,MAGlCxB,QAAQC,IAAI,0BAuDX9H,EAAOkP,aAAe,qBAAKzO,UAAW,eAAhB,SAA+B,cAAC,EAAD,CAASa,SA9E7C,SAAA8N,GAChBA,EAAKpM,aAAegE,EAAYhE,aAAeoM,EAAKnM,aAAe+D,EAAY/D,aAAemM,EAAKjM,WAAa6D,EAAY7D,WAAaiM,EAAKhM,WAAa4D,EAAY5D,WAAagM,EAAK/L,WAAa2D,EAAY3D,WAAa+L,EAAK9L,QAAU0D,EAAY1D,QAAU8L,EAAK5L,QAAUwD,EAAYxD,QAAU4L,EAAK7L,QAAUyD,EAAYzD,QACtUG,EAAW,2BAAK0L,GAAN,IAAYlM,YAAW,eA+EjC,qBAAKzC,UAAY,aAAjB,SACA,cAAC,GAAD,CAAUkG,YAAeA,EAAaC,YAAeA,EAAaC,QAAWA,EAASC,OAAUA,EAAQpE,YAAeA,EAAaqE,eAAkBA,EAAgBC,YAAeA,EAAatD,WAAcA,MAEhN,qBAAKjD,UAAW,YAAhB,SAA4B,cAAC,GAAD,UAAYkG,S,kCC9J9C,SAAS0I,GAAYjP,GACnBA,EAAMkP,iBACN1K,OAAO2K,KAAK,6BAA8B,UAI7B,SAASC,KACtB,OACE,eAACC,GAAA,EAAD,CAAa5N,aAAW,aAAxB,UACE,cAAC6N,GAAA,EAAD,CAAYnR,MAAM,cAAlB,0BACA,cAACoR,GAAA,EAAD,CAAMpR,MAAM,UAAUqR,KAAK,4BAA4B9N,QAASuN,GAAhE,4B,OCESQ,OAXf,WACE,OACE,sBAAKpP,UAAU,MAAf,UACE,cAAC,GAAD,IACA,qBAAKA,UAAY,SAAjB,SACA,cAAC,GAAD,UCNNqP,IAASjK,OAEL,cAAC,GAAD,IAEFkK,SAASC,eAAe,W","file":"static/js/main.9706ddd9.chunk.js","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles, withStyles} from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport Confirm from '@material-ui/icons/Check';\nimport Grid from '@material-ui/core/Grid';\nimport Slider from '@material-ui/core/Slider';\nimport Button from '@material-ui/core/Button';\nimport ColorLensIcon from '@material-ui/icons/ColorLens';\n\n\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  sliderroot: {\n    width: 100 + theme.spacing(3) * 2,\n  },\n  slidermargin: {\n    height: theme.spacing(2),\n  },\n  margin: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textField: {\n    width: '12ch',\n    background: \"white\",\n    borderRadius: 8,\n    opacity: 0.8,\n  },\n}));\n\nconst RedSlider = withStyles({\n  root: {\n    color: 'red',\n    height: 4,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst GreenSlider = withStyles({\n  root: {\n    color: 'green',\n    height: 4,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\nconst BlueSlider = withStyles({\n  root: {\n    color: 'blue',\n    height: 4,\n  },\n  thumb: {\n    height: 20,\n    width: 20,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n    '&:focus, &:hover, &$active': {\n      boxShadow: 'inherit',\n    },\n  },\n  active: {},\n  valueLabel: {\n    left: 'calc(-50% + 4px)',\n  },\n  track: {\n    height: 8,\n    borderRadius: 4,\n  },\n  rail: {\n    height: 8,\n    borderRadius: 4,\n  },\n})(Slider);\n\n\n// export default function InputAdornments() {\nconst GridSettings = props =>{\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    planesize: 6000,\n    gridsize: 50,\n    gridChange: false,\n    lightR: 0.45,\n    lightG: 0.45,\n    lightB: 0.45,\n    // colorChange: false,\n  });\n\n  const handleGridChange = (prop) => (event) => {\n    setValues({ ...values, [prop]: event.target.value, gridChange: false});\n    //handle child state change\n  };\n  const handleColorChange = (prop) => (event, slidervalue) => {\n    setValues({ ...values, [prop]: slidervalue, gridChange: false});\n    //handle child state change\n  };\n\n  const handleClickGridConfirm = ()=> {\n    setValues({ ...values, gridChange: true });\n    if (props.onChange) {\n        props.onChange(values);\n      }\n  };\n\n  // const handleClickColorConfirm = ()=> {\n  //   setValues({ ...values, colorChange: true });\n  //   if (props.onChange) {\n  //       props.onChange(values);\n  //     }\n  // };\n\n//   const handleMouseDownPassword = (event) => {\n//     event.preventDefault();\n//   };\n\n  return (\n    <div className={classes.root}>\n      <div>\n      <Grid container direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <TextField\n                size = \"small\"\n                id=\"filled-secondary-planesize\"\n                variant=\"filled\"\n                color=\"secondary\"\n                label=\"plane size\"\n                type=\"number\"\n                defaultValue = {values.planesize}\n                onChange={handleGridChange('planesize')}\n                className={clsx(classes.margin, classes.textField)}\n                InputProps={{\n                  startAdornment: <InputAdornment position=\"start\">inch</InputAdornment>,\n                }}\n              />\n        </Grid>\n        <Grid item>\n          <TextField\n                  size = \"small\"\n                  id=\"filled-secondary-gridsize\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"grid size\"\n                  type=\"number\"\n                  onChange={handleGridChange('gridsize')}\n                  defaultValue = {values.gridsize}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: <InputAdornment position=\"start\">inch</InputAdornment>,\n                  }}\n                />\n        </Grid>\n        <Grid item>\n          <Fab size=\"small\" color = \"secondary\" aria-label=\"confirm grid\" onClick = {handleClickGridConfirm} color = {values.gridChange ? \"primary\" : \"default\" }>\n              <Confirm />\n          </Fab>\n        </Grid>\n      </Grid>\n      </div>\n      <Grid container direction=\"row\" alignItems=\"left\">\n        <Grid item>\n        <div className={classes.sliderroot}>\n        <div className={classes.slidermargin} />\n        \n        <Button size = \"small\" disabled style={{ color: \"black\" }}> Background <ColorLensIcon fontSize = \"large\"></ColorLensIcon></Button>\n          <div className={classes.slidermargin} />\n          <RedSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider 2\" defaultValue={0.45} min = {0} max = {1} step = {0.01} onChange={handleColorChange('lightR')}/>\n          <div className={classes.slidermargin} />\n          <BlueSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider 3\" defaultValue={0.45} min = {0} max = {1} step = {0.01} onChange={handleColorChange('lightB')}/>\n          <div className={classes.slidermargin} />\n          <GreenSlider valueLabelDisplay=\"auto\" aria-label=\"pretto slider 4\" defaultValue={0.45} min = {0} max = {1} step = {0.01} onChange={handleColorChange('lightG')}/>\n        </div>\n        </Grid>\n        {/* <Grid item>\n        <div className={classes.slidermargin} />\n          <Fab size=\"small\" color = \"secondary\" aria-label=\"confirm color\" onClick = {handleClickColorConfirm} color = {values.colorChange ? \"primary\" : \"default\" }>\n              <Confirm />\n          </Fab>\n        </Grid> */}\n      </Grid>\n      <div>\n\n      </div>\n    </div>\n  );\n}\n\nexport default GridSettings;","import React from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles} from '@material-ui/core/styles';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport Fab from '@material-ui/core/Fab';\nimport Confirm from '@material-ui/icons/Check';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Swal from 'sweetalert2';\n\nconst useStyles = makeStyles((theme) => ({\n    margin: {\n      marginTop: theme.spacing(1),\n      marginRight: theme.spacing(1),\n    },\n    textField: {\n      width: '30ch',\n      background: \"white\",\n      borderRadius: 8,\n      opacity: 0.8,\n    },\n  }));\n  \n/**\n * Component to handle file upload. Works for image\n * uploads, but can be edited to work for any file.\n */\nconst FileUpload = props =>{\n  const classes = useStyles();\n  // State to store uploaded file\n  const [fileControl, setFile] = React.useState({\n      file: \"\",\n      confirmUpload: false,\n  });\n  const handleClickUploadConfirm = ()=> {\n    setFile({...fileControl, confirmUpload: true});\n    if (props.onChange) {\n        props.onChange(fileControl);\n      }\n  };\n  // Handles file upload event and updates state\n  function handleUpload(event) {\n    setFile({file:event.target.files[0], confirmUpload: false});\n    // Add code here to upload file to server\n    // ...\n  }\n\n  return (\n    <div className={classes.root}>\n    <div>\n    <Grid container direction=\"column\" alignItems=\"left\">\n      <Grid item>\n        <TextField\n                size = \"small\"\n                id=\"filled-secondary-planesize\"\n                variant=\"outlined\"\n                color=\"secondary\"\n                type=\"file\"\n                defaultValue = {fileControl.file.name}\n                onChange={handleUpload}\n                className={clsx(classes.margin, classes.textField)}\n                />\n        </Grid>\n      <Grid item>\n        <div id=\"upload-states-info\">\n        <p>Filename: {fileControl.file.name}</p>\n        <p>File Size: {fileControl.file.size} bytes</p>\n        </div>\n      </Grid>\n      <Grid item>\n        <div className={classes.slidermargin} />\n          <Fab size=\"small\" color = \"secondary\" aria-label=\"confirm color\" onClick = {handleClickUploadConfirm} color = {fileControl.confirmUpload ? \"primary\" : \"default\" }>\n              <Confirm />\n          </Fab>\n     </Grid>\n    </Grid>\n\n    </div>\n    </div>\n\n  );\n}\n\nexport default FileUpload;\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Confirm from \"@material-ui/icons/Check\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Swal from \"sweetalert2\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textFieldtop: {\n    width: \"32ch\",\n    background: \"white\",\n    borderRadius: 8,\n    opacity: 0.8,\n  },\n  textField: {\n    width: \"16ch\",\n    background: \"white\",\n    borderRadius: 8,\n    opacity: 0.8,\n  },\n}));\n\nconst BuiltInComponent = (props) => {\n  const classes = useStyles();\n  const [builtinData, setBuiltin] = React.useState({\n    builtintype: \"\",\n    builtinname: \"\",\n    builtinnew: false,\n    positionx: 0,\n    positiony: 0,\n    positionz: 0,\n    scalex: 1,\n    scaley: 1,\n    scalez: 1,\n  });\n\n  const handleBuiltinChange = (event) => {\n    const name = event.target.name;\n    const eventvalue = event.target.value;\n    setBuiltin({\n        ...builtinData,\n        [name]: event.target.value,\n        builtinnew: false,\n      });\n\n    //handle child state change\n  };\n\n  const handlePositionChange = (prop) => (event) => {\n    setBuiltin({ ...builtinData, [prop]: event.target.value, builtinnew: false });\n    //handle child state change\n  };\n\n  const handleClickAddConfirm = () => {\n    setBuiltin({ ...builtinData, builtinnew: true });\n    if (props.onChange) {\n      props.onChange(builtinData);\n    }\n  };\n  return (\n    <div>\n      <div className={classes.margin}></div>\n      <Grid container direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <FormControl\n            size=\"small\"\n            variant=\"filled\"\n            className={classes.textFieldtop}\n          >\n            <InputLabel htmlFor=\"filled-age-native-simple\">+ Models (All Fields Required)</InputLabel>\n            <Select\n              native\n              value={builtinData.builtintype}\n              onChange={handleBuiltinChange}\n              inputProps={{\n                name: \"builtintype\",\n                id: \"filled-builtins-native-simple\",\n              }}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <optgroup label=\"Base\">\n              <option value={\"Wall\"}>Wall</option>\n              <option value={\"Floor\"}>Floor</option>\n              </optgroup>\n              <optgroup label=\"Shelf System\">\n              <option value={\"Storage_Shelf_100x40x150\"}>Storage Shelf 100x40x150</option>\n              </optgroup>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <div>\n        <Grid container direction=\"row\" alignItems=\"left\">\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"left\">\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-name\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"object name\"\n                  type=\"string\"\n                  // defaultValue = {values.planesize}\n                  onChange={handlePositionChange(\"builtinname\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={\n                    {\n                      // startAdornment: <InputAdornment position=\"start\">required:</InputAdornment>,\n                    }\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-x\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  defaultValue = {builtinData.positionx}\n                  onChange={handlePositionChange(\"positionx\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">X:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-y\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"positiony\")}\n                 defaultValue = {builtinData.positiony}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Y:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-z\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"positionz\")}\n                 defaultValue = {builtinData.positionz}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Z:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"left\">\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-x\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-x\"\n                  type=\"number\"\n                  defaultValue = {builtinData.scalex}\n                  onChange={handlePositionChange(\"scalex\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">X:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-y\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-y\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"scaley\")}\n                  defaultValue = {builtinData.scaley}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Y:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-z\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-z\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"scalez\")}\n                 defaultValue = {builtinData.scalez}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Z:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <div className={classes.margin}></div>\n              <Grid item>\n                <Fab\n                  size=\"small\"\n                  color=\"secondary\"\n                  aria-label=\"confirm grid\"\n                  onClick={handleClickAddConfirm}\n                  color={builtinData.builtinnew ? \"primary\" : \"default\"}\n                >\n                  <Confirm />\n                </Fab>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default BuiltInComponent;\n","import { Engine, Scene, Color3} from '@babylonjs/core'\nimport React, { useEffect, useRef } from 'react'\n\nconst SceneComponent = (props) => {\n    const reactCanvas = useRef(null);\n    const { antialias, engineOptions, adaptToDeviceRatio, sceneOptions, onRender, onSceneReady, ...rest } = props;\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    useEffect(() => {\n        if (reactCanvas.current) {\n            const engine = new Engine(reactCanvas.current, antialias, engineOptions, adaptToDeviceRatio, { stencil: true });\n            const scene = new Scene(engine, sceneOptions);\n            scene.clearColor = new Color3(0.45, 0.45, 0.45);\n            engine.setSize(width, height);\n            if (scene.isReady()) {\n                props.onSceneReady(scene)\n            } else {\n                scene.onReadyObservable.addOnce(scene => props.onSceneReady(scene));\n            }\n            engine.runRenderLoop(() => {\n                if (typeof onRender === 'function') {\n                    onRender(scene);\n                }\n                scene.render();\n            })\n            const resize = () => {\n                const newWidth = window.innerWidth;\n                const newHeight = window.innerHeight;\n                engine.setSize(newWidth, newHeight);\n                scene.getEngine().resize();\n            }\n            if (window) {\n                window.addEventListener('resize', resize);\n            }\n            return () => {\n                scene.getEngine().dispose();\n                if (window) {\n                    window.removeEventListener('resize', resize);\n                }\n            }\n        }\n    }, [reactCanvas])\n    return (\n        <canvas  ref={reactCanvas} {...rest} />\n    );\n}\n\nexport default SceneComponent;","import React from \"react\";\n// import * as BABYLON from 'babylonjs';\n// import 'babylonjs-loaders';\nimport \"@babylonjs/loaders/OBJ\";\nimport {\n  ArcRotateCamera,\n  Color3,\n  Vector3,\n  HemisphericLight,\n  MeshBuilder,\n  Mesh,\n  UtilityLayerRenderer,\n  PositionGizmo,\n  RotationGizmo,\n  HighlightLayer,\n  SceneLoader,\n} from \"@babylonjs/core\";\nimport { GridMaterial } from \"@babylonjs/materials\";\nimport SceneComponent from \"./SceneComponent\";\nimport \"./ViewPortComponent.css\";\nimport Swal from \"sweetalert2\";\nlet translategizmo = null;\nlet rotategizmo = null;\nlet utilLayer = null;\nlet highlight = null;\n\nconst ViewPortComponent = (props) => {\n  const {\n    settingData,\n    setSettings,\n    addData,\n    setAdd,\n    fileControl,\n    setFileControl,\n    libraryData,\n    setBuiltin,\n  } = props;\n  const sceneRef = React.useRef(null);\n\n  React.useEffect(() => {\n    const scene = sceneRef.current;\n\n    if (scene) {\n      // modify the plane, by dispose and rebuild adding to scene.\n      if (!translategizmo) {\n        utilLayer = new UtilityLayerRenderer(scene);\n        // Create the gizmo and attach to the sphere\n        translategizmo = new PositionGizmo(utilLayer);\n        rotategizmo = new RotationGizmo(utilLayer);\n\n        highlight = new HighlightLayer(scene);\n      } else {\n        translategizmo.attachedMesh = null;\n        translategizmo.dispose();\n        rotategizmo.dispose();\n        utilLayer.dispose();\n        highlight.dispose();\n        utilLayer = new UtilityLayerRenderer(scene);\n        // Create the gizmo and attach to the sphere\n        translategizmo = new PositionGizmo(utilLayer);\n        rotategizmo = new RotationGizmo(utilLayer);\n        highlight = new HighlightLayer(scene);\n      }\n\n      translategizmo.attachedMesh = null;\n      // Keep the gizmo fixed to world rotation\n      translategizmo.updateGizmoRotationToMatchAttachedMesh = false;\n      translategizmo.updateGizmoPositionToMatchAttachedMesh = true;\n      rotategizmo.updateGizmoRotationToMatchAttachedMesh = false;\n      rotategizmo.updateGizmoPositionToMatchAttachedMesh = true;\n\n      scene.onPointerDown = function (evt, pickResult) {\n        // We try to pick an object\n\n        if (pickResult.hit) {\n          console.log(pickResult.pickedMesh.name);\n          highlight.removeAllMeshes();\n          translategizmo.attachedMesh = pickResult.pickedMesh;\n          rotategizmo.attachedMesh = pickResult.pickedMesh;\n          highlight.addMesh(pickResult.pickedMesh, Color3.Magenta());\n        } else {\n          translategizmo.attachedMesh = null;\n          rotategizmo.attachedMesh = null;\n          highlight.removeAllMeshes();\n        }\n      };\n      if (settingData.gridChange) {\n        console.log(\"grid change request\");\n        scene.clearColor = new Color3(\n          settingData.lightR,\n          settingData.lightG,\n          settingData.lightB\n        );\n        const prePlane = scene.getMeshByID(\"plane\");\n        const prePlaneMaterial = scene.getMaterialByID(\"groundMaterial\");\n        if (\n          prePlane._width != settingData.planesize ||\n          prePlaneMaterial.gridRatio != settingData.gridsize\n        ) {\n          prePlane.dispose();\n          prePlaneMaterial.dispose();\n          let ground = MeshBuilder.CreateGround(\n            \"plane\",\n            { width: settingData.planesize, height: settingData.planesize },\n            scene\n          );\n          let groundMaterial = new GridMaterial(\"groundMaterial\", scene);\n          groundMaterial.majorUnitFrequency = 10;\n          groundMaterial.minorUnitVisibility = 0.5;\n          groundMaterial.gridRatio = settingData.gridsize; //smallest block size\n          groundMaterial.backFaceCulling = false;\n          groundMaterial.mainColor = new Color3(1, 1, 1);\n          groundMaterial.lineColor = new Color3(1.0, 1.0, 1.0);\n          groundMaterial.opacity = 0.98;\n          ground.material = groundMaterial;\n          ground.isPickable = false;\n        }\n\n        setSettings({ ...settingData, gridChange: false });\n      }\n      if (fileControl.fileadd) {\n        console.log(fileControl.file);\n        //test\n        SceneLoader.ImportMesh(\n          \"\",\n          \"https://raw.githubusercontent.com/gamer-ai/amrgl/main/frontend/amrgl/src/assets/example/metal_shelf.obj\",\n          \"\",\n          scene,\n          function (newMeshes) {\n            console.log(newMeshes[1].name);\n            console.log(newMeshes);\n\n            let selectedBuiltIn = newMeshes[1];\n            // // cap.position.set(42, 260, 13);\n            selectedBuiltIn.scaling = new Vector3(1, 1, 1);\n          }\n        );\n        setFileControl({ ...fileControl, fileadd: false });\n      }\n      if (libraryData.builtinnew) {\n        console.log(\"add new object from library request\");\n        if (libraryData.builtintype == \"Storage_Shelf_100x40x150\") {\n          const preShelf = scene.getMeshByID(libraryData.builtinname);\n\n          console.log(preShelf);\n          if (preShelf) {\n            console.log(\"found exist!\");\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                libraryData.builtinname +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                preShelf.position = new Vector3(\n                  Number(libraryData.positionx),\n                  Number(libraryData.positiony),\n                  Number(libraryData.positionz)\n                );\n                preShelf.scaling = new Vector3(\n                  Number(libraryData.scalex),\n                  Number(libraryData.scaley),\n                  Number(libraryData.scalez)\n                );\n                setBuiltin({ ...libraryData, builtinnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n          } else {\n            console.log(\"imported new mesh!\");\n            SceneLoader.ImportMesh(\n              \"\",\n              \"https://raw.githubusercontent.com/gamer-ai/amrgl/main/frontend/amrgl/src/assets/example/metal_shelf.obj\",\n              \"\",\n              scene,\n              function (newMeshes) {\n                let selectedBuiltin = newMeshes[1];\n                selectedBuiltin.id = libraryData.builtinname;\n                console.log(selectedBuiltin.name);\n                selectedBuiltin.position = new Vector3(\n                  Number(libraryData.positionx),\n                  Number(libraryData.positiony),\n                  Number(libraryData.positionz)\n                );\n                selectedBuiltin.scaling = new Vector3(\n                  Number(libraryData.scalex),\n                  Number(libraryData.scaley),\n                  Number(libraryData.scalez)\n                );\n              }\n            );\n            setBuiltin({ ...libraryData, builtinnew: false });\n          }\n        }\n      }\n      if (addData.addnew) {\n        console.log(\"add new prime request\");\n        if (addData.primetype == \"BOX\") {\n          const preBox = scene.getMeshByID(addData.primename);\n          if (preBox) {\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                addData.primename +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                preBox.dispose();\n                let box = MeshBuilder.CreateBox(\n                  addData.primename,\n                  { size: 1 },\n                  scene\n                );\n                box.position = new Vector3(\n                  Number(addData.positionx),\n                  Number(addData.positiony),\n                  Number(addData.positionz)\n                );\n                box.scaling = new Vector3(\n                  Number(addData.scalex),\n                  Number(addData.scaley),\n                  Number(addData.scalez)\n                );\n                setAdd({ ...addData, addnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n            // alert('Reminder: are you going to make changes to existing prime, name : ' + addData.primename + ' ?')\n          } else {\n            let box = MeshBuilder.CreateBox(\n              addData.primename,\n              { size: 1 },\n              scene\n            );\n            box.isPickable = true;\n            box.position = new Vector3(\n              Number(addData.positionx),\n              Number(addData.positiony),\n              Number(addData.positionz)\n            );\n            box.scaling = new Vector3(\n              Number(addData.scalex),\n              Number(addData.scaley),\n              Number(addData.scalez)\n            );\n            setAdd({ ...addData, addnew: false });\n          }\n          //Added, need to track\n        } else if (addData.primetype == \"SPHERE\") {\n          console.log(\"sphere\");\n          const preSphere = scene.getMeshByID(addData.primename);\n          if (preSphere) {\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                addData.primename +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                preSphere.dispose();\n                let sphere = MeshBuilder.CreateSphere(\n                  addData.primename,\n                  { size: 1 },\n                  scene\n                );\n                sphere.position = new Vector3(\n                  Number(addData.positionx),\n                  Number(addData.positiony),\n                  Number(addData.positionz)\n                );\n                sphere.scaling = new Vector3(\n                  Number(addData.scalex),\n                  Number(addData.scaley),\n                  Number(addData.scalez)\n                );\n                setAdd({ ...addData, addnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n          } else {\n            let sphere = MeshBuilder.CreateSphere(\n              addData.primename,\n              { size: 1 },\n              scene\n            );\n            sphere.position = new Vector3(\n              Number(addData.positionx),\n              Number(addData.positiony),\n              Number(addData.positionz)\n            );\n            sphere.scaling = new Vector3(\n              Number(addData.scalex),\n              Number(addData.scaley),\n              Number(addData.scalez)\n            );\n            setAdd({ ...addData, addnew: false });\n          }\n          //Added, need to track\n        } else if (addData.primetype == \"CYLINDER\") {\n          const preCylinder = scene.getMeshByID(addData.primename);\n          if (preCylinder) {\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                addData.primename +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                preCylinder.dispose();\n\n                let cylinder = MeshBuilder.CreateCylinder(\n                  addData.primename,\n                  { size: 1 },\n                  scene\n                );\n                cylinder.position = new Vector3(\n                  Number(addData.positionx),\n                  Number(addData.positiony),\n                  Number(addData.positionz)\n                );\n                cylinder.scaling = new Vector3(\n                  Number(addData.scalex),\n                  Number(addData.scaley),\n                  Number(addData.scalez)\n                );\n                setAdd({ ...addData, addnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n            // alert('Reminder: are you going to make changes to existing prime, name : ' + addData.primename + ' ?')\n          } else {\n            let cylinder = MeshBuilder.CreateCylinder(\n              addData.primename,\n              { size: 1 },\n              scene\n            );\n            cylinder.position = new Vector3(\n              Number(addData.positionx),\n              Number(addData.positiony),\n              Number(addData.positionz)\n            );\n            cylinder.scaling = new Vector3(\n              Number(addData.scalex),\n              Number(addData.scaley),\n              Number(addData.scalez)\n            );\n            setAdd({ ...addData, addnew: false });\n          }\n          //Added, need to track\n        } else if (addData.primetype == \"POLYHYDRON\") {\n          const prePolyhedron = scene.getMeshByID(addData.primename);\n          if (prePolyhedron) {\n            Swal.fire({\n              position: \"top\",\n              text:\n                \"Do you want to edit an existing object, name: \" +\n                addData.primename +\n                \" ?\",\n              showDenyButton: true,\n              background: \"black\",\n              allowOutsideClick: false,\n              confirmButtonText: `Confirm`,\n              denyButtonText: `Cancel`,\n            }).then((result) => {\n              /* Read more about isConfirmed, isDenied below */\n              if (result.isConfirmed) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"success\",\n                  text: \"Edited\",\n                  showConfirmButton: false,\n                  timer: 1500,\n                });\n                prePolyhedron.dispose();\n                let polyhedron = Mesh.CreatePolyhedron(\n                  addData.primename,\n                  { type: addData.polyhydrontype, size: 1 },\n                  scene\n                );\n                polyhedron.position = new Vector3(\n                  Number(addData.positionx),\n                  Number(addData.positiony),\n                  Number(addData.positionz)\n                );\n                polyhedron.scaling = new Vector3(\n                  Number(addData.scalex),\n                  Number(addData.scaley),\n                  Number(addData.scalez)\n                );\n                setAdd({ ...addData, addnew: false });\n                //removed, need to untrack\n              } else if (result.isDenied) {\n                Swal.fire({\n                  background: \"black\",\n                  icon: \"info\",\n                  text: \"Changes are not saved, please edit again\",\n                });\n              }\n            });\n            // alert('Reminder: are you going to make changes to existing prime, name : ' + addData.primename + ' ?')\n          } else {\n            let polyhedron = Mesh.CreatePolyhedron(\n              addData.primename,\n              { type: addData.polyhydrontype, size: 1 },\n              scene\n            );\n            polyhedron.position = new Vector3(\n              Number(addData.positionx),\n              Number(addData.positiony),\n              Number(addData.positionz)\n            );\n            polyhedron.scaling = new Vector3(\n              Number(addData.scalex),\n              Number(addData.scaley),\n              Number(addData.scalez)\n            );\n            setAdd({ ...addData, addnew: false });\n          }\n          //Added, need to track\n        }\n      }\n    }\n  }, [settingData, addData, fileControl, libraryData]);\n\n  const onSceneReady = (scene) => {\n    sceneRef.current = scene;\n\n    // This creates and positions a free camera (non-mesh)\n    let camera = new ArcRotateCamera(\n      \"mainCamera\",\n      0,\n      0,\n      10,\n      new Vector3(0, 0, 0),\n      scene\n    );\n    // This targets the camera to scene origin\n    camera.setPosition(new Vector3(0, 500, -600));\n    const canvas = scene.getEngine().getRenderingCanvas();\n    // This attaches the camera to the canvas\n    camera.attachControl(canvas, true);\n    // This creates a light, aiming 0,1,0 - to the sky (non-mesh)\n    let light = new HemisphericLight(\"light\", new Vector3(0, 500, 0), scene);\n    // Default intensity is 1. Let's dim the light a small amount\n    light.intensity = 0.7;\n    // initial ground\n    let ground = MeshBuilder.CreateGround(\n      \"plane\",\n      { width: settingData.planesize, height: settingData.planesize },\n      scene\n    );\n    let groundMaterial = new GridMaterial(\"groundMaterial\", scene);\n    groundMaterial.majorUnitFrequency = 10;\n    groundMaterial.minorUnitVisibility = 0.5;\n    groundMaterial.gridRatio = settingData.gridsize; //smallest block size\n    groundMaterial.backFaceCulling = false;\n    groundMaterial.mainColor = new Color3(1, 1, 1);\n    groundMaterial.lineColor = new Color3(1.0, 1.0, 1.0);\n    groundMaterial.opacity = 0.98;\n    ground.material = groundMaterial;\n    ground.isPickable = false;\n  };\n  /**\n   * Will run on every frame render.  We are spinning the box on y-axis.\n   */\n  const onRender = (scene) => {\n    // if (settingData.planesize !== ground.width){\n    // console.log(ground.material.width)\n    // }\n    // if (ground !== undefined) {\n    //   var deltaTimeInMillis = scene.getEngine().getDeltaTime();\n    //   const rpm = 10;\n    //   ground.rotation.y += ((rpm / 60) * Math.PI * 2 * (deltaTimeInMillis / 1000));\n    // }\n  };\n\n  return (\n    <SceneComponent\n      antialias\n      onSceneReady={onSceneReady}\n      onRender={onRender}\n      id=\"viewport\"\n    ></SceneComponent>\n  );\n};\n\nexport default ViewPortComponent;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: 'fit-content',\n    border: `1px solid ${theme.palette.divider}`,\n    // borderRadius: theme.shape.borderRadius,\n    backgroundColor: theme.palette.background.paper,\n    color: theme.palette.text.secondary,\n    '& svg': {\n      margin: theme.spacing(1.5),\n    },\n    '& hr': {\n      margin: theme.spacing(0, 0.5),\n    },\n  },\n}));\n\nconst ScaleLine = props => {\n// export default function VerticalDividers() {\n  const classes = useStyles();\n\n  return (\n    <div>\n      <Grid container alignItems=\"left\" className={classes.root}>\n              plane:\n        <Divider orientation=\"vertical\" flexItem />\n                {props.children.planesize}\n        <Divider orientation=\"vertical\" flexItem />\n              grid:  \n        <Divider orientation=\"vertical\" flexItem />\n            {props.children.gridsize}\n      </Grid>\n    </div>\n  );\n}\nexport default ScaleLine;","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Confirm from \"@material-ui/icons/Check\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport Swal from \"sweetalert2\";\n\nconst useStyles = makeStyles((theme) => ({\n  margin: {\n    marginTop: theme.spacing(1),\n    marginRight: theme.spacing(1),\n  },\n  textFieldtop: {\n    width: \"32ch\",\n    background: \"white\",\n    borderRadius: 8,\n    opacity: 0.8,\n  },\n  textField: {\n    width: \"16ch\",\n    background: \"white\",\n    borderRadius: 8,\n    opacity: 0.8,\n  },\n}));\n\nconst AddComponent = (props) => {\n  const classes = useStyles();\n  const [primeData, setPrime] = React.useState({\n    primetype: \"\",\n    primename: \"\",\n    polyhydrontype: null,\n    addnew: false,\n    positionx: 0,\n    positiony: 0,\n    positionz: 0,\n    scalex: 100,\n    scaley: 100,\n    scalez: 100,\n  });\n\n  const handlePrimeChange = (event) => {\n    const name = event.target.name;\n    const eventvalue = event.target.value;\n    if (event.target.value == \"POLYHYDRON\") {\n      // console.log('found')\n\n      (async () => {\n        console.log(\"selected Polyhydron, now choose type\");\n        const { value: Polyhydrons } = await Swal.fire({\n          position: \"top\",\n          background: \"black\",\n          input: \"select\",\n          inputOptions: {\n            Polyhydrons: {\n              0: \"Tetrahedron\",\n              1: \"Octahedron\",\n              2: \"Dodecahedron\",\n              3: \"Icosahedron\",\n              4: \"Rhombicuboctahedron\",\n              5: \"Triangular Prism\",\n              6: \"Pentagonal Prism\",\n              7: \"HexagonalPrism\",\n              8: \"Square Pyramid (J1)\",\n              9: \"Pentagonal Pyramid (J2)\",\n              10: \"Triangular Dipyramid (J12)\",\n              11: \"Pentagonal Dipyramid (J13)\",\n              12: \"Elongated Square Dipyramid (J15)\",\n              13: \"Elongated Pentagonal Dipyramid (J16)\",\n              14: \"Elongated Pentagonal Cupola (J20)\",\n            },\n          },\n          inputPlaceholder: \"Select a Polyhydron\",\n          showCancelButton: true,\n          inputValidator: (value) => {\n            return new Promise((resolve) => {\n              resolve();\n            });\n          },\n        });\n        if (Polyhydrons) {\n          Swal.fire({\n            background: \"black\",\n            icon: \"success\",\n            text: \"Selected\",\n            showConfirmButton: false,\n            timer: 1500,\n          });\n          setPrime({\n            ...primeData,\n            primetype: eventvalue,\n            polyhydrontype: Polyhydrons,\n            addnew: false,\n          });\n        }\n      })();\n    } else {\n      setPrime({\n        ...primeData,\n        [name]: event.target.value,\n        polyhydrontype: null,\n        addnew: false,\n      });\n    }\n\n    //handle child state change\n  };\n\n  const handlePositionChange = (prop) => (event) => {\n    setPrime({ ...primeData, [prop]: event.target.value, addnew: false });\n    //handle child state change\n  };\n\n  const handleClickAddConfirm = () => {\n    setPrime({ ...primeData, addnew: true });\n    if (props.onChange) {\n      props.onChange(primeData);\n    }\n  };\n  return (\n    <div>\n      <div className={classes.margin}></div>\n      <Grid container direction=\"row\" alignItems=\"center\">\n        <Grid item>\n          <FormControl\n            size=\"small\"\n            variant=\"filled\"\n            className={classes.textFieldtop}\n          >\n            <InputLabel htmlFor=\"filled-age-native-simple\">\n              + Primes (All Fields Required)\n            </InputLabel>\n            <Select\n              native\n              value={primeData.primetype}\n              onChange={handlePrimeChange}\n              inputProps={{\n                name: \"primetype\",\n                id: \"filled-primes-native-simple\",\n              }}\n            >\n              <option aria-label=\"None\" value=\"\" />\n              <option value={\"BOX\"}>BOX</option>\n              <option value={\"SPHERE\"}>SPHERE</option>\n              <option value={\"CYLINDER\"}>CYLINDER</option>\n              <option value={\"POLYHYDRON\"}>POLYHYDRON</option>\n            </Select>\n          </FormControl>\n        </Grid>\n      </Grid>\n      <div>\n        <Grid container direction=\"row\" alignItems=\"left\">\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"left\">\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-name\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"object name\"\n                  type=\"string\"\n                  // defaultValue = {values.planesize}\n                  onChange={handlePositionChange(\"primename\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={\n                    {\n                      // startAdornment: <InputAdornment position=\"start\">required:</InputAdornment>,\n                    }\n                  }\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-x\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  defaultValue={primeData.positionx}\n                  onChange={handlePositionChange(\"positionx\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">X:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-y\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"positiony\")}\n                  defaultValue={primeData.positiony}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Y:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-z\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"center position\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"positionz\")}\n                  defaultValue={primeData.positionz}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Z:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n            </Grid>\n          </Grid>\n\n          <Grid item>\n            <Grid container direction=\"column\" alignItems=\"left\">\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-x\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-x\"\n                  type=\"number\"\n                  defaultValue={primeData.scalex}\n                  onChange={handlePositionChange(\"scalex\")}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">X:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-y\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-y\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"scaley\")}\n                  defaultValue={primeData.scaley}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Y:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <Grid item>\n                <TextField\n                  size=\"small\"\n                  id=\"filled-secondary-z\"\n                  variant=\"filled\"\n                  color=\"secondary\"\n                  label=\"scale-z\"\n                  type=\"number\"\n                  onChange={handlePositionChange(\"scalez\")}\n                  defaultValue={primeData.scalez}\n                  className={clsx(classes.margin, classes.textField)}\n                  InputProps={{\n                    startAdornment: (\n                      <InputAdornment position=\"start\">Z:</InputAdornment>\n                    ),\n                  }}\n                />\n              </Grid>\n              <div className={classes.margin}></div>\n              <Grid item>\n                <Fab\n                  size=\"small\"\n                  color=\"secondary\"\n                  aria-label=\"confirm grid\"\n                  onClick={handleClickAddConfirm}\n                  color={primeData.addnew ? \"primary\" : \"default\"}\n                >\n                  <Confirm />\n                </Fab>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </div>\n    </div>\n  );\n};\n\nexport default AddComponent;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport SetIcon from '@material-ui/icons/TuneTwoTone';\nimport DownloadIcon from '@material-ui/icons/GetAppRounded';\nimport LibraryAddIcon from '@material-ui/icons/LibraryAdd';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Setting from './settingtable/SettingComponent';\nimport Upload from './uploadtable/UploadComponent';\nimport Library from './builtintable/BuiltInComponent';\nimport ViewPort from './viewer/ViewPortComponent';\nimport './ViewWithControl.css'\nimport Scaleline from './viewer/ScalelineComponent';\nimport Add from './addtable/AddComponent';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFileUpload } from '@fortawesome/free-solid-svg-icons'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginRight: theme.spacing(2),\n    },\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(2),\n  },\n}));\n\nexport default function FloatingActionButtons() {\n  const classes = useStyles();\n\n\n  const [settingData, setSettings] = React.useState( {\n    planesize: 6000,\n    gridsize: 50,\n    gridChange: false,\n    confirmed: false,\n    lightR: 0.45,\n    lightG: 0.45,\n    lightB: 0.45,\n  } );\n  \n  const [addData, setAdd] = React.useState({\n    primetype: '',\n    primename: '',\n    addnew: false,\n    positionx: 0,\n    positiony: 0,\n    positionz: 0,\n    scalex: 100,\n    scaley: 100,\n    scalez: 100,\n  });\n\n  const [libraryData, setBuiltin] = React.useState({\n    buultintype: '',\n    builtinname: '',\n    builtinnew: false,\n    positionx: 0,\n    positiony: 0,\n    positionz: 0,\n    scalex: 1,\n    scaley: 1,\n    scalez: 1,\n  });\n\n  const [fileControl, setFileControl] = React.useState( {\n    file: \"\",\n    fileadd: false,\n  } );\n\n  const changeAdd = data => {\n    if (data.primetype != addData.primetype || data.primename != addData.primename || data.positionx != addData.positionx || data.positiony != addData.positiony || data.positionz != addData.positionz || data.scalex != addData.scalex || data.scalez != addData.scalez || data.scaley != addData.scaley){\n      setAdd({ ...data, addnew:true})\n    } \n  };\n\n  const changeLibrary = data => {\n    if (data.builtintype != libraryData.builtintype || data.builtinname != libraryData.builtinname || data.positionx != libraryData.positionx || data.positiony != libraryData.positiony || data.positionz != libraryData.positionz || data.scalex != libraryData.scalex || data.scalez != libraryData.scalez || data.scaley != libraryData.scaley){\n      setBuiltin({ ...data, builtinnew:true})\n    } \n  };\n\n  const changeSettings = data => {\n    if ((data.planesize != settingData.planesize || data.gridsize != settingData.gridsize || data.lightR != settingData.lightR || data.lightB != settingData.lightB || data.lightG != settingData.lightG)){\n      console.log('a grid change happened')\n      setSettings({ ...data, gridChange: true})\n  }    \n    else{\n    console.log('no change needed')\n    }\n\n  };\n\n  const changeUpload = data => {\n    if (data.file.name != fileControl.file.name) {\n      console.log('a file add happened')\n      setFileControl({ ...data, fileadd:true})\n    } \n    else{\n      console.log('no need to change')\n    }\n  };\n\n  const [values, setValues] = React.useState({\n    showAdd: false,\n    showSettings: false,\n    showEdit: false,\n    showImport: false,\n    showLibrary: false,\n  });\n \n\n  const handleSettingClick = () => {\n    setValues({ showImport: false, showEdit: false, showAdd: false, showLibrary: false,showSettings: !values.showSettings });\n  };\n  const handleAddClick = () => {\n    setValues({ showImport: false, showEdit: false, showLibrary: false,showAdd: !values.showAdd, showSettings: false });\n  };\n  const handleLibraryClick = () => {\n    setValues({ showEdit: false, showAdd: false, showLibrary: !values.showLibrary, showSettings: false, showImport: false});\n  };\n  const handleImportClick = () => {\n    setValues({ showEdit: false, showAdd: false, showLibrary: false, showSettings: false, showImport: !values.showImport });\n  };\n\n  return (\n    \n    <div>\n      <div className = {classes.root}>\n      <div className = \"Navigation\">\n      <Fab  size=\"small\"  color = {values.showSettings ? \"primary\" : \"default\" } onClick={handleSettingClick} >\n        <SetIcon  aria-label=\"setting\"/>\n      </Fab>\n      <Fab size=\"small\"  aria-label=\"add\" color = {values.showAdd ? \"primary\" : \"default\" } onClick={handleAddClick}>\n        <AddIcon />\n      </Fab>\n      <Fab size=\"small\"  aria-label=\"add\" color = {values.showLibrary ? \"primary\" : \"default\" } onClick={handleLibraryClick}>\n        <LibraryAddIcon />\n      </Fab>\n      <Fab size=\"small\" aria-label=\"import\" color = {values.showImport ? \"primary\" : \"default\" } onClick={handleImportClick}>\n        <FontAwesomeIcon icon={faFileUpload} size=\"lg\"/>\n      </Fab>\n      <Fab size=\"small\"  aria-label=\"edit\">\n        <EditIcon />\n      </Fab>\n      <Fab size=\"small\"  aria-label=\"delete\">\n        <DeleteIcon />\n      </Fab>\n      <Fab size=\"small\" aria-label=\"download\">\n        <DownloadIcon />\n      </Fab>\n      {values.showSettings && <div className =\"SettingTable\"><Setting onChange={changeSettings}></Setting></div>}\n      {values.showAdd && <div className =\"AddTable\"><Add onChange={changeAdd} ></Add></div>}\n      {values.showImport && <div className =\"UploadTable\"><Upload onChange={changeUpload}></Upload></div>}\n      {values.showLibrary && <div className =\"LibraryTable\"><Library onChange={changeLibrary}></Library></div>}\n      </div>\n    </div>\n      <div className = \"BottomView\">\n      <ViewPort settingData = {settingData} setSettings = {setSettings} addData = {addData} setAdd = {setAdd} fileControl = {fileControl} setFileControl = {setFileControl} libraryData = {libraryData} setBuiltin = {setBuiltin}/>\n      </div>\n      <div className =\"Scaleline\"><Scaleline>{settingData}</Scaleline></div>\n    </div>\n\n  );\n}","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport Link from '@material-ui/core/Link';\n\nfunction handleClick(event) {\n  event.preventDefault();\n  window.open(\"https://www.muyangguo.xyz/\", \"_blank\");\n}\n\n\nexport default function SimpleBreadcrumbs() {\n  return (\n    <Breadcrumbs aria-label=\"breadcrumb\">\n      <Typography color=\"textPrimary\">Prototype V1</Typography>\n      <Link color=\"inherit\" href=\"https://www.muyangguo.xyz\" onClick={handleClick}>@Muyang Guo\n      </Link>\n    </Breadcrumbs>\n  );\n}","import React from 'react';\nimport View from './components/controllerview/ViewWithControl';\nimport './components/controllerview/ViewWithControl.css';\nimport Footer from './components/footer/FooterComponent';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <View></View>\n      <div className = \"Footer\">\n      <Footer></Footer>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}